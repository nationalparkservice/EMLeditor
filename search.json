[{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to CONTRIBUTING.md","title":"Contributing to CONTRIBUTING.md","text":"First , thanks taking time contribute! types contributions encouraged valued. See Table Contents different ways help details project handles . Please make sure read relevant section making contribution. make lot easier us maintainers smooth experience involved. community looks forward contributions. like project, just don’t time contribute, ’s fine. easy ways support project show appreciation, also happy : - Star project - Refer project project’s readme - Mention project local meetups tell friends/colleagues - Cite packages published works","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Contributing to CONTRIBUTING.md","text":"Question Want Contribute Reporting Bugs Suggesting Enhancements First Code Contribution Improving Documentation Styleguides Commit Messages Join Project Team","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"i-have-a-question","dir":"","previous_headings":"","what":"I Have a Question","title":"Contributing to CONTRIBUTING.md","text":"want ask question, assume read available Documentation. ask question, best search existing Issues might help . case found suitable issue still need clarification, can write question issue. also advisable search internet answers first. still feel need ask question need clarification, recommend following: Open Issue. Provide much context can ’re running . Provide project platform versions , depending seems relevant. take care issue soon possible.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"i-want-to-contribute","dir":"","previous_headings":"","what":"I Want To Contribute","title":"Contributing to CONTRIBUTING.md","text":"contributing project, must agree authored 100% content, necessary rights content content contribute may provided project license.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"before-submitting-a-bug-report","dir":"","previous_headings":"I Want To Contribute > Reporting Bugs","what":"Before Submitting a Bug Report","title":"Contributing to CONTRIBUTING.md","text":"good bug report shouldn’t leave others needing chase information. Therefore, ask investigate carefully, collect information describe issue detail report. Please complete following steps advance help us fix potential bug fast possible. Make sure using latest version. Determine bug really bug error side e.g. using incompatible environment components/versions (Make sure read documentation. looking support, might want check section). see users experienced (potentially already solved) issue , check already bug report existing bug error bug tracker. Also make sure search internet see users outside GitHub community discussed issue. Collect information bug: Stack trace (Traceback) OS, Platform Version (Windows, Linux, macOS, x86, ARM) Version interpreter, compiler, SDK, runtime environment, package manager, depending seems relevant. Possibly input output Can reliably reproduce issue? can also reproduce older versions?","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"how-do-i-submit-a-good-bug-report","dir":"","previous_headings":"I Want To Contribute > Reporting Bugs","what":"How Do I Submit a Good Bug Report?","title":"Contributing to CONTRIBUTING.md","text":"must never report security related issues, vulnerabilities bugs including sensitive information issue tracker, elsewhere public. Instead sensitive bugs must sent email robert_baker@nps.gov. use GitHub issues track bugs errors. run issue project: Open Issue. (Since can’t sure point whether bug , ask talk bug yet label issue.) Explain behavior expect actual behavior. Please provide much context possible describe reproduction steps someone else can follow recreate issue . usually includes code. good bug reports isolate problem create reduced test case. See https://gist.github.com/hadley/270442 great run create reproducible examples. Provide information collected previous section. ’s filed: project team label issue accordingly. team member try reproduce issue provided steps. reproduction steps obvious way reproduce issue, team ask steps mark issue needs-repro. Bugs needs-repro tag addressed reproduced. team able reproduce issue, marked needs-fix, well possibly tags, issue left implemented someone development team. may also address issue issue pull request, reviewed development team.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"suggesting-enhancements","dir":"","previous_headings":"I Want To Contribute","what":"Suggesting Enhancements","title":"Contributing to CONTRIBUTING.md","text":"section guides submitting enhancement including completely new features minor improvements existing functionality. Following guidelines help maintainers community understand suggestion find related suggestions.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"before-submitting-an-enhancement","dir":"","previous_headings":"I Want To Contribute > Suggesting Enhancements","what":"Before Submitting an Enhancement","title":"Contributing to CONTRIBUTING.md","text":"Make sure using latest version. Read documentation carefully find functionality already covered, maybe individual configuration. Perform search see enhancement already suggested. , add comment existing issue instead opening new one. Find whether idea fits scope aims project. ’s make strong case convince project’s developers merits feature. Keep mind want features useful majority users just small subset. ’re just targeting minority users, consider writing add-/plugin library package. Please consult developers like create add-package. Maybe can help!","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"how-do-i-submit-a-good-enhancement-suggestion","dir":"","previous_headings":"I Want To Contribute > Suggesting Enhancements","what":"How Do I Submit a Good Enhancement Suggestion?","title":"Contributing to CONTRIBUTING.md","text":"Enhancement suggestions tracked GitHub issues. Use clear descriptive title issue identify suggestion. Provide step--step description suggested enhancement many details possible. Describe current behavior explain behavior expected see instead . point can also tell alternatives work . may want include screenshots animated GIFs help demonstrate steps point part suggestion related . good free software generating GIFs across major operating systems. Explain enhancement useful users. may also want point projects solved better serve inspiration.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"your-first-code-contribution","dir":"","previous_headings":"I Want To Contribute","what":"Your First Code Contribution","title":"Contributing to CONTRIBUTING.md","text":"like contribute code please make adjustments issue pull request. development team review code prior merging pull request. issuing pull request make sure: 1) added description changes made changelog NEWS.md 2) added function, make sure also include unit tests cover function. changed function, make sure unit tests still pass. 3) added changed function, make sure package loads using devtools::load_all(). 2) updated necessary documentation using devtools::document() 3) updated associated web pages using pkgdown::build_site_github_pages() 4) checked errors warnings package built using devtools::check().","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"styleguides","dir":"","previous_headings":"","what":"Styleguides","title":"Contributing to CONTRIBUTING.md","text":"encourage use tidyverse style guide.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"commit-messages","dir":"","previous_headings":"Styleguides","what":"Commit Messages","title":"Contributing to CONTRIBUTING.md","text":"Commit messages short descriptive.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributing to CONTRIBUTING.md","text":"guide based contributing.md. Make !","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 EMLeditor authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a01_prereqs.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Pre-Requisites","text":"set fully QA/QC’d data files .csv format. exported database, may want think strategically files look like accessed utilized future users data package (including, potentially, !). worth running example metadata creation understand files used. Data files must encoded UTF-8 format. aren’t sure whether .csvs UTF-8 can convert UTF-8. Opening .csv Excel, choose File main menu “Save ” option. Finally, select “CSV UTF-8 (Comma separated) (*.csv)“) file format drop-menu. files single data package must directory. additional .csv files directory.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a01_prereqs.html","id":"software","dir":"Articles","previous_headings":"","what":"Software","title":"Pre-Requisites","text":"R probably Rstudio installed computer. available Software Center. See R Advisory Group’s website information. also need install R package tidyverse well packages CRAN. Many available part NPSdataverse package.","code":"#install packages: install.packages(c(\"devtools\", \"tidyverse\"))  #the NPSdataverse includes EMLassemblyline, EMLeditor, and several other useful packages: devtools::install_github(\"nationalparkservice/NPSdataverse\")  library(tidyverse) library(NPSdataverse)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a01_prereqs.html","id":"internet-access","dir":"Articles","previous_headings":"","what":"Internet access","title":"Pre-Requisites","text":"strong internet connection, particularly taxonomic information. EMLassemblyline uses API searches various taxonomic databases use scientific names data files populate taxonomic coverage fields Kingdom species (beyond). can time consuming many unique taxonomic names.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a01_prereqs.html","id":"ms-excel","dir":"Articles","previous_headings":"","what":"MS excel","title":"Pre-Requisites","text":"Access MS excel (spreadsheet type program). really help editing tab-delimited .txt template files generated using EMLassemblyline.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a01_prereqs.html","id":"a-text-editor","dir":"Articles","previous_headings":"","what":"A text editor","title":"Pre-Requisites","text":"Access notepad text editor (MS Word) writing abstracts, etc. avoiding non-UTF-8 encoded characters.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"EML Creation Script","text":"page mirrors editable EML Creation template included EMLeditor package (installed installed either EMLeditor part NPSdataverse). access editable version script, open R studio select “File” drop-menu. Choose “New File” select “R markdown” submenu. pop-box, select “Template” highlight “Editable_EML_Creation_Workflow {Emleditor}” (likely first item list). Click “OK” open template.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"EML Creation Script","text":"script acts template file end--end creation EML metadata R DataStore. metadata generated sufficient quality data package Reference Type can used automatically populate DataStore fields reference type. script utilizes multiple R packages example inputs EVER Veg Map AA dataset. example script meant either run test process replaced content. step step process section reviewed, edited necessary, run one time. completing section often something external R (e.g. open text file add content). Several EMLassemblyline functions decision points may apply certain data packages. workflow takes advantage NPSdataverse, R-based ecosystem includes external EML creation tools R packages EMLassemblyline EML. However, tools designed work DataStore. Therefore, NPSdataverse workflow also incorporate steps NPS-developed R packages EMLeditor DPchecker. necessarily -write information generated EMLassemblyline. OK expected behavior.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"good-additional-references","dir":"Articles","previous_headings":"","what":"Good additional references","title":"EML Creation Script","text":"EMLassemblyline","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"install-and-load-r-packages","dir":"Articles","previous_headings":"","what":"Install and Load R Packages","title":"EML Creation Script","text":"Install packages. recently installed packages, please re-install . want make sure latest versions NPSdataverse packages - QCkit, EMLeditor, DPchecker, NPSutils - constant development. run errors installing packages github NPS computers may first need run:","code":"options(download.file.method=\"wininet\") #install packages install.packages(c(\"devtools\", \"tidyverse\")) devtools::install_github(\"nationalparkservice/NPSdataverse\") # When loading packages, you may be advised to update to more recent versions # of dependent packages. Most of these updates likely are not critical.   # However, it is important that you update to the latest versions of QCkit,  # EMLeditor, DPchecker and NPSutils as these NPS packages are under constant  # development. library(NPSdataverse) library(tidyverse)"},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"set-the-overall-package-details","dir":"Articles","previous_headings":"Generating EML","what":"Set the overall package details","title":"EML Creation Script","text":"following items reviewed updated fit package working . lists one item, keep order (.e. item #1 correspond file list).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"metadata-filename","dir":"Articles","previous_headings":"Generating EML","what":"Metadata filename","title":"EML Creation Script","text":"becomes file name .xml file. sure ends _metadata comply data package specifications. need include extension (.xml).","code":"metadata_id <- \"Test_EVER_AA_metadata\""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"package-title","dir":"Articles","previous_headings":"Generating EML","what":"Package Title","title":"EML Creation Script","text":"Give data package title. FAIR principles suggest titles 7 20 words. sure make title informative consider naive user interpret .","code":"package_title <- \"TEST_Everglades National Park Accuracy Assessment (AA) Data Package\""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"data-collection-status","dir":"Articles","previous_headings":"Generating EML","what":"Data collection status","title":"EML Creation Script","text":"Choose either “ongoing” “complete”","code":"data_type <- \"complete\""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"path-to-data-files","dir":"Articles","previous_headings":"Generating EML","what":"Path to data file(s)","title":"EML Creation Script","text":"Tell R data files . working directory, can set working_folder getwd(). different directory need specify directory.","code":"working_folder <- getwd() # or: # working_folder <- setwd(\"C:/users/<yourusername>/Documents/my_data_package_folder)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"list-data-files","dir":"Articles","previous_headings":"Generating EML","what":"List data files","title":"EML Creation Script","text":"Tell R data files called.","code":"# if the data files are in your working directory (and the only .csv files in your working directory are data files: data_files <- list.files(pattern = \"*.csv\")  # alternatively, you can list the files out manually: #data_files <- c(\"qry_Export_AA_points.csv\", #                \"qry_Export_AA_VegetationDetails.csv\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"name-the-data-files","dir":"Articles","previous_headings":"Generating EML","what":"Name the data files","title":"EML Creation Script","text":"relatively short, perhaps informative actual file names. Make sure order files data_files.","code":"data_names <- c(\"TEST_AA Point Location Data\",                 \"TEST_AA Vegetation Coverage Data\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"describe-each-data-file","dir":"Articles","previous_headings":"Generating EML","what":"Describe each data file","title":"EML Creation Script","text":"Data file descriptions unique 10 words long. Descriptions used auto-generated tables within ReadMe DRR. need use 10 words, consider putting information abstract, methods, additional information sections. , make sure order files describing.","code":"data_descriptions <- c(\"TEST_Everglades Vegetation Map Accuracy Assessment point data\",                        \"TEST_Everglades Vegetation Map Accuracy Assessment vegetation data\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"placeholder-url-for-data-files","dir":"Articles","previous_headings":"Generating EML","what":"Placeholder URL for data files","title":"EML Creation Script","text":"EMLassemblyline needs know data files (URL). However, yet initiated draft reference DataStore, isn’t possible specify URL. Instead, insert place holder. Don’t worry - information updated later add Digital Object Identifier(DOI) metadata.","code":"data_urls <- c(rep(\"temporary URL\", length(data_files)))"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"taxonomic-information","dir":"Articles","previous_headings":"Generating EML","what":"Taxonomic information","title":"EML Creation Script","text":"Specify taxonomic information . can single file list files fields (columns) scientific names used automatically generate taxonomic coverage metadata. suggest using DarwinCore column names, “scientificName”. data package taxonomic data, skip step.","code":"# the file(s) where scientific names are located: data_taxa_tables <- \"qry_Export_AA_VegetationDetails.csv\"  # the column where your scientific names are within the data files. data_taxa_fields <- \"scientific_Name\""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"geographic-information","dir":"Articles","previous_headings":"Generating EML","what":"Geographic information","title":"EML Creation Script","text":"Specify tables fields contain geographic coordinates site names. information used fill geographic coverage elements metadata. data package geographic information skip step. geographic information supplying park units (bounding boxes) can also skip step; Park Units corresponding GPS coordinates bounding boxes added later step. coordinates UTMs GPS, try convert_utm_to_ll() function QCkit package","code":"data_coordinates_table <- \"qry_Export_AA_points.csv\" data_latitude <- \"decimalLatitude\" data_longitude <- \"decimalLongitude\" data_sitename <- \"Point_ID\""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"temporal-information","dir":"Articles","previous_headings":"Generating EML","what":"Temporal information","title":"EML Creation Script","text":"indicate collection date first last data point data package (across files) include planning, pre- post-processing time. format one complies International Standards Organization’s standard 8601. recommended format EML : YYYY-MM-DD, Y four digit year, M two digit month code (01 - 12 example, January = 01), D two digit day month (01 - 31). Using alternate format setting date future cause errors road!","code":"startdate <- ymd(\"2010-01-26\") enddate <- ymd(\"2013-01-04\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"emlassemblyline-functions","dir":"Articles","previous_headings":"","what":"EMLassemblyline Functions","title":"EML Creation Script","text":"next set functions meant considered one one run applicable particular data package. first year typically see run, data format protocol stay constant time may possible skip future years. Additionally datasets may geographic taxonomic component.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"function-1---core-metadata-information","dir":"Articles","previous_headings":"EMLassemblyline Functions","what":"FUNCTION 1 - Core Metadata Information","title":"EML Creation Script","text":"function creates blank .txt template files abstract, additional information, custom units, intellectual rights, keywords, methods, personnel. personnel.txt file can best edited excel. must list least one person “creator” role one person “contact” role (can list person twice .). Creators authors included data package citation. need list anyone “PI” can list many additional people custom roles desired (e.g. “field technician”, “laboratory assistant”). individual must surName. electornicMailAddress email userId persons’s ORCID (one). List ORCID just 16 digit string, include https://orcid.org prefix (e.g. xxxx-xxxx-xxxx-xxxx). can leave projectTitle, fundingAgency, fundingNumber blank. Contrary EML assemblyline’s warnings need designated Principle Investigator (PI) listed personnel.txt file. encourage craft abstract text editor, Word. abstract forwarded data.gov, DataCite, google dataset search, etc. worth time carefully consider relevant important information abstract. Abstracts must greater 20 words. Good abstracts tend 250 words less. may consider including following information: premise data collection (done?), important, brief overview relevant methods, brief explanation data included period time, location(s), type data collected. Keep mind lengthy descriptions methods, provenance, data QA/QC, etc may better expand upon topics Data Release Report similar document uploaded separately DataStore. Currently function inserts Creative Common 0 license. CC0 license need updated. However, ensure licence meets NPS specifications properly coincides CUI designations, best way update license information later step using EMLeditor::set_int_rights(). need edit .txt file.","code":"EMLassemblyline::template_core_metadata(path = working_folder,                         license = \"CC0\") # that '0' is a zero!"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"function-2---data-table-attributes","dir":"Articles","previous_headings":"EMLassemblyline Functions","what":"FUNCTION 2 - Data Table Attributes","title":"EML Creation Script","text":"function creates “attributes_datafilename.txt” file data file. can opened Excel (recommend trying update text editor) fill /adjust columns attributeDefinition, class, unit, etc. refer https://ediorg.github.io/EMLassemblyline/articles/edit_tmplts.html helpful hints view_unit_dictionary() potential units. need run attributes (name, order new/deleted fields) modified previous year. NOTE files already exist previous run, overwritten.","code":"EMLassemblyline::template_table_attributes(path = working_folder,                            data.table = data_files,                            write.file = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"function-3---data-table-categorical-variable","dir":"Articles","previous_headings":"EMLassemblyline Functions","what":"FUNCTION 3 - Data Table Categorical Variable","title":"EML Creation Script","text":"function Creates “catvars_datafilename.txt” file data file columns class = categorical. .txt files include unique ‘code’ allow input corresponding ‘definition’.NOTE since list codes harvested data , ’s possible additional codes may relevant/possible automatically included . Consider lookup lists carefully see additional options included (e.g dataset DPL values set “Accepted” function include “Raw” “Provisional” resulting file may want add manually). NOTE files already exist previous run, overwritten.","code":"EMLassemblyline::template_categorical_variables(path = working_folder,                                 data.path = working_folder,                                 write.file = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"function-4---geographic-coverage","dir":"Articles","previous_headings":"EMLassemblyline Functions","what":"FUNCTION 4 - Geographic Coverage","title":"EML Creation Script","text":"geographic coverage information plan using park boundaries, can skip step. can add park unit connections using EMLeditor, automatically generate properly formatted GPS coordinates park bounding boxes. like add additional GPS coordinates (specific site locations, survey plots, bounding boxes locations within park, etc) please . function creates geographic_coverage.txt file lists sites points long coordinates lat/long. coordinates UTM probably easiest convert first create geographic_coverage.txt file another way (see QCkit R functions convert UTM lat/long).","code":"EMLassemblyline::template_geographic_coverage(path = working_folder,                               data.path = working_folder,                              data.table = data_coordinates_table,                               lat.col = data_latitude,                               lon.col = data_longitude,                              site.col = data_sitename,                               write.file = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"function-5---taxonomic-coverage","dir":"Articles","previous_headings":"EMLassemblyline Functions","what":"FUNCTION 5 - Taxonomic Coverage","title":"EML Creation Script","text":"function creates taxonomic_coverage.txt file taxonomic data. Currently supported authorities 3 = ITIS, 9 = WORMS, 11 = GBIF. example , function first try find scientific name ITIS fails look GBIF. lots taxa, take time complete.","code":"EMLassemblyline::template_taxonomic_coverage(path = working_folder,                              data.path = working_folder,                              taxa.table = data_taxa_tables,                             taxa.col = data_taxa_fields,                              taxa.authority = c(3,11),                             taxa.name.type = 'scientific',                              write.file = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"create-an-eml-object","dir":"Articles","previous_headings":"","what":"Create an EML object","title":"EML Creation Script","text":"Run (may take little ) see validates (see ‘Validation passed’). generate R object called “my_metadata”. function alert issues review . Run function issues() end process get feedback items might missing need attention. Fix issues re-run make_eml() function.","code":"my_metadata <- EMLassemblyline::make_eml(path = working_folder,                dataset.title = package_title,                data.table = data_files,                data.table.name = data_names,                data.table.description = data_descriptions,                data.table.url = data_urls,                temporal.coverage = c(startdate, enddate),                maintenance.description = data_type,                package.id = metadata_id,                return.obj = TRUE,                 write.file = FALSE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"check-for-eml-validity","dir":"Articles","previous_headings":"","what":"Check for EML validity","title":"EML Creation Script","text":"good point pause test whether EML valid. EML valid see following (admittedly cryptic) result: EML schema valid, function notify specific problems need address. HIGHLY recommend use EMLassemblyline /EMLeditor functions fix EML attempt edit hand.","code":"EML::eml_validate(my_metadata) # [1] TRUE # attr(,\"errors\") # character(0)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"add-nps-specific-fields-to-eml","dir":"Articles","previous_headings":"","what":"Add NPS specific fields to EML","title":"EML Creation Script","text":"Now valid EML metadata, need add NPS-specific elements fields. instance, unit connections, DOIs, referencing DRR, etc. information functions can found : https://nationalparkservice.github.io/EMLeditor/.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"add-controlled-unclassified-information-cui-codes","dir":"Articles","previous_headings":"Add NPS specific fields to EML","what":"Add Controlled Unclassified Information (CUI) codes","title":"EML Creation Script","text":"required step, using function set_cui_code(). important indicate data package contains CUI, also inform users data package contain CUI empty fields can ambiguous (contain CUI ordid creators just miss step?). can choose one five CUI dissemination codes. Watch spaces! : PUBLIC - contain CUI. FED - Contains CUI. federal employees access (similar “internal ” DataStore). FEDCON - Contains CUI. federal employees federal contractors access (also much like current “internal ” setting DataStore). DL - Contains CUI. available named list individuals (list individuals TBD) NOCON - Contains CUI. Federal, state, local, tribal employees may access, contractors . information codes can found : https://www.archives.gov/cui/registry/limited-dissemination","code":"my_metadata <- EMLeditor::set_cui_code(my_metadata, \"PUBLIC\") # note that in this case I have added the CUI code to the original R object,  # \"my_metadata\" but by giving it a new name, i.e. \"my_meta2\" I could have # created a new R object. Sometimes creating a new R object is preferable  # because if you make a mistake you don't need to start over again."},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"intellectual-rights","dir":"Articles","previous_headings":"Add NPS specific fields to EML","what":"Intellectual Rights","title":"EML Creation Script","text":"EMLassemblyine ezEML provide attractive looking boilerplate setting intellectual rights. looks reasonable easy just keep. However, NPS specific regulations can intellectualRights tag. Use set_int_rights() replace text NPS-approved text. Note: must first add CUI dissemination code using set_cui() dissemination code license must agree. , give data package PUBLIC dissemination code “restricted” license (vise versa: restricted data package contains CUI public domain CC0 license). can choose one three options, public NPS data packages, CC0 license appropriate: “restricted”: data contains Controlled Unclassified Information (CUI), intellectual rights must read: “product determined contain Controlled Unclassified Information (CUI) National Park Service, intended internal use . published open license. Unauthorized access, use, distribution prohibited.” “public”: data contain CUI, default public domain. intellectual rights must read: “work public domain. copyright license.” “CC0”: need license, instance working partner organization requires license, use CC0: “person associated work deed dedicated work public domain waiving rights work worldwide copyright law, including related neighboring rights, extent allowed law. can copy, modify, distribute perform work, even commercial purposes, without asking permission.” set_int_rights() function also put name license field EML DataStore harvesting.","code":"# choose from \"restricted\", \"public\" or \"CC0\" (zero), see above: my_metadata <- EMLeditor::set_int_rights(my_metadata, \"CC0\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"add-a-data-package-doi","dir":"Articles","previous_headings":"Add NPS specific fields to EML","what":"Add a data package DOI","title":"EML Creation Script","text":"Add data package’s Digital Object Identifier (DOI) metadata. set_datastore_doi() function requires logged VPN. initiates draft data package reference DataStore, populates reference title pulled metadata, “[DRAFT] : ”. temporary title purely tracking purposes can easily updated later. set_datastore_doi() function insert corresponding DOI data package metadata. Now draft reference initiated DataStore, possible fill online URL data file. set_datastore_doi() automatically . things keep mind: 1) DOI data package reference yet active publicly accessible review activation/publication. 2) suggest manually upload files. manually upload files, sure upload data package correct draft reference! easy create several draft references draft title different DataStore reference IDs DOIs. check reference ID number carefully 3) need fill additional fields DataStore point - many auto-populated based metadata upload. fields populate -written content metadata.","code":"my_metadata <- EMLeditor::set_datastore_doi(my_metadata)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"add-information-about-a-drr-optional","dir":"Articles","previous_headings":"Add NPS specific fields to EML","what":"Add information about a DRR (optional)","title":"EML Creation Script","text":"producing (plan produce) DRR, add links DRR describing data package. need DOI DRR drafting well DRR’s Title. Go DataStore initiate draft DRR, including title. purposes data package, need populate fields. point, need activate DRR reference , DOI reserved DRR, activated publication plenty time construct DRR.","code":"my_metadata <- EMLeditor::set_drr(my_metadata, 7654321, \"DRR Title\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"set-the-language","dir":"Articles","previous_headings":"Add NPS specific fields to EML","what":"Set the language","title":"EML Creation Script","text":"human language (opposed computer language) data package metadata constructed . Examples include English, Spanish, Navajo, etc. full list available languages available Libraryof Congress. Please use “English Name Language” input. function convert input appropriate 3-character ISO 639-2 code.Available languages: https://www.loc.gov/standards/iso639-2/php/code_list.php","code":"my_metadata <- EMLeditor::set_language(my_metadata,                                        \"English\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"add-content-unit-links","dir":"Articles","previous_headings":"Add NPS specific fields to EML","what":"Add content unit links","title":"EML Creation Script","text":"park units data collected , instance ROMO, ROMN. data package includes data one park, can listed. instance, data collected park units within network, unit listed separately rather network. geographic coordinates corresponding bounding boxes park unit listed automatically generated inserted metadata. Individual park units informative bounding box entire network.","code":"park_units <- c(\"ROMO\", \"GRSA\", \"YELL\") my_metadata <- EMLeditor::set_content_units(my_metadata,                                             park_units)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"add-the-producing-units","dir":"Articles","previous_headings":"Add NPS specific fields to EML","what":"Add the Producing Unit(s)","title":"EML Creation Script","text":"unit(s) responsible generating data package. may single park (ROMO) network (ROMN). may identical units listed previous step, overlapping, entirely different.","code":"# a single producing unit: my_metadata <- EMLeditor::set_producing_units(my_metadata,                                               \"ROMN\") # alternatively, a list of producing units: my_metadata <- EMLeditor::set_producing_units(my_metadata,                                               c(\"ROMN\", \"GRYN\"))"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"add-a-project-optional","dir":"Articles","previous_headings":"Add NPS specific fields to EML","what":"Add a project (optional)","title":"EML Creation Script","text":"can add DataStore project metadata. metadata extracted DataStore, data package automatically added DataStore project. things keep mind: 1) DataStore supports one project connection use first DataStore project metadata (although can many projects). 2) DataStore make connections data packages projects; remove . want remove connection must manually via web interface. 3) project must public add metadata. 4) Whoever uploads extracts metadata DataStore must ownership level permissions data package project.","code":"# where \"1234567\" is the DataStore Reference id for the Project # that the data package should be linked to. my_metadata <- EMLeditor::set_project(my_metadata, 1234567)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"validate-your-eml","dir":"Articles","previous_headings":"Add NPS specific fields to EML","what":"Validate your EML","title":"EML Creation Script","text":"Almost done! another great time validate EML make sure Everything schema valid. Run: EML valid see following (admittedly crypitic): EML schema valid, function notify specific problems need address. HIGHLY recommend use EMLassemblyline /EMLeditor functions fix EML attempt edit hand.","code":"EML::eml_validate(my_metadata) # [1] TRUE # attr(,\"errors\") # character(0)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"write-your-eml-to-an-xml-file","dir":"Articles","previous_headings":"","what":"Write your EML to an xml file","title":"EML Creation Script","text":"Now ’s time convert R object .xml file save . Keep mind file name end “_metadata.xml”.","code":"EML::write_eml(my_metadata, \"mymetadatafilename_metadata.xml\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"check-your--xml-file","dir":"Articles","previous_headings":"","what":"Check your .xml file","title":"EML Creation Script","text":"’re EML metadata file ready upload. can run additional tests .xml metadata file. function assumes one .xml file directory:","code":"# This assumes that you have written your metadata to an .xml file and that the .xml file is in the current working directory. DPchecker::run_congruence_checks(check_metadata_only = TRUE)  # If you .xml file with metadata is in a different directory, you will have to specify that: # DPchecker::run_congruence_checks(\"C:/Users/<yourusername>/Documents/my_data_package\", check_metadata_only = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"check-your-data-package","dir":"Articles","previous_headings":"","what":"Check your data package","title":"EML Creation Script","text":"data package now complete, can run test prior upload make sure package fits minimal set requirements data metadata properly specified coincide. assumes data package root R project. run checks code chunk directly “check .xml file” !","code":"# this assumes that the data package is the working directory DPchecker::run_congruence_checks()  # if your data package is somewhere else, specify that: # DPchecker::run_congruence_checks(\"C:/Users/<yourusername>/Documents/my_data_package\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a02_EML_creation_script.html","id":"upload-your-data-package","dir":"Articles","previous_headings":"","what":"Upload your data package","title":"EML Creation Script","text":"everything checked , ready upload data package! recommend using upload_data_package() accomplish . function automatically checks DOI uploads correct reference DataStore. files data package need folder, can one .xml file (ending “_metadata.xml”) files data files .csv format. individual file < 32Mb. files > 32Mb, need upload manually using web interface DataStore. within DataStore able extract information metadata file populate relevant DataStore fields. upper right, select “Edit” drop menu. click “Files Links” tab. left side files list, select radio button corresponding metadata. click “Extract Metadata” button top right box files listed . Please don’t activate reference just yet! Data package references need reviewed prior activation. still working review process look like.","code":"# this assumes your data package is in the current working directory EMLeditor::upload_data_package()  # If your data package is somewhere else, specify that: #upload_data_package(\"C:/Users/<yourusername>/Documents/my_data_package)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"abstract-txt","dir":"Articles","previous_headings":"","what":"abstract.txt","title":"Editing .txt Files","text":"Example Describes salient features dataset concise summary much like abstract journal article. cover data created. good rule thumb abstract 250 words less. abstract become publicly-facing piece text featured DataStore reference page well sent DataCite, data.gov, Google’s Dataset Search. thoughtful well-planned abstract may useable data package also Data Release Report (DRR). write abstract word processor (MS Word) paste abstract.txt template file, please pass text editor (Notepad) make sure UTF-8 encoded special characters, including line breaks <br>. Note: editing abstract.txt best done via text editor.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"methods-txt","dir":"Articles","previous_headings":"","what":"methods.txt","title":"Editing .txt Files","text":"Example Describes data creation methods. Includes enough detail future users correctly use data. Lists instrument descriptions, protocols, etc. Methods sections can include citations. may appropriate cite Protocol, datasets ingested generate data package, software (e.g. R), packages (e.g. dplyr, ggplot2) custom scripts. Note: editing methods.txt best done via text editor.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"keywords-txt","dir":"Articles","previous_headings":"","what":"keywords.txt","title":"Editing .txt Files","text":"Example Describes data small set terms. Keywords facilitate search discovery scientific terms, well names research groups, field stations, organizations. Using controlled vocabulary thesaurus vastly improves discovery. recommend using LTER Controlled Vocabulary possible. Note: editing keywords.txt best done via spreadsheet application. Columns: keyword One keyword per line keywordThesaurus URI vocabulary keyword originates.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"personnel-txt","dir":"Articles","previous_headings":"","what":"personnel.txt","title":"Editing .txt Files","text":"Example Describes personnel funding sources involved creation data. facilitates attribution reporting. Valid EML requires least one person creator role. Creator synonym Author DataStore. DataStore also requires least one person role contact. person, list person twice (.e. two separate rows). Additional personnel (field technicians, consultants, collaborators, contributors, etc) may added give credit necessary. roles “creator” “contact” listed associatedParties. purposes NPS data packages, likely Principle Investigators (PIs), information funding funding agencies. Note: editing personnel.txt best done spreadsheet application. Columns: givenName First name middleInitial Middle initial surName Last name organizationName Organization person belongs electronicMailAddress Email address userId Persons research identifier (e.g. ORCID). Links persons research profile data publication. creator Author(s) data. appear data citation. PI Principal investigator data created . appear project level metadata. OK leave blank PIs many NPS data packages. contact point contact questions data. Can organization position (e.g. data manager). , enter organization position name givenName leave middleInitial surName empty. roles (e.g. Field Technician) listed associated parties data. specific role (e.g. “Field Tech” also listed metadata) projectTitle Title project data created . ancillary projects involved, add new lines primary project PIs info replicated. can typically left blank. fundingAgency Agency project funded . can left blank. fundingNumber Grant award number. Likely leave blank.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"intellectual_rights-txt","dir":"Articles","previous_headings":"","what":"intellectual_rights.txt","title":"Editing .txt Files","text":"need edit intellectual rights file now. EMLassemblyline autopopulates “intellectual_rights.txt” file use file add information  element EML. finished generating EML need update intellectual rights coincide NPS guidance using separate EMLeditor::set_int_rights() function.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"attributes_-txt","dir":"Articles","previous_headings":"","what":"attributes_*.txt","title":"Editing .txt Files","text":"Example 1, Example 2 multiple data files (.csvs), multiple text files generated, starting “attributes”, followed csv file name, extension “.txt”. files Describe columns data table (classes, units, datetime formats, missing value codes). Note: editing attribute_.txt best done using spreadsheet application. Columns: attributeName Column name. Make sure column attributeName tha match (including case sensitivity) attributeDefinition Column definition numeric Numeric variable categorical Categorical variable (.e. nominal) character Free text character strings (e.g. notes) Date Date time variable unit Column unit. Required numeric classes. Select EML’s standard unit dictionary, accessible view_unit_dictionary(). Use values “id” column. found, define custom unit (see custom_units.txt). Y Year M Month D Day h Hour m Minute s Second Common separators format string components (e.g. - /  :) supported. missingValueCode Missing value code. Required columns containing missing value code). missingValueCodeExplanation Definition missing value code.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"custom_units-txt","dir":"Articles","previous_headings":"","what":"custom_units.txt","title":"Editing .txt Files","text":"Example Describes non-standard units used data table attribute template. Note: custom-units.txt best edited via spreadsheet application. Columns: id Unit name listed unit column table attributes template (e.g. feetPerSecond) unitType Unit type (e.g. velocity) parentSI SI equivalent (e.g. metersPerSecond) multiplierToSI Multiplier SI equivalent (e.g. 0.3048) description Abbreviation (e.g. ft/s)","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"catvars_-txt","dir":"Articles","previous_headings":"","what":"catvars_*.txt","title":"Editing .txt Files","text":"Example 1, Example 2 Describes categorical variables data table (columns classified categorical table attributes template). multiple data files (csvs), multiple catvars files created, one csv. Note: catvars files best edited spreadsheet application. Columns: attributeName Column name code Categorical variable definition Definition categorical variable","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"geographic_coverage-txt","dir":"Articles","previous_headings":"","what":"geographic_coverage.txt","title":"Editing .txt Files","text":"Example Describes data collected. geographic coverage information plan using park boundaries, can skip step. can add park unit connections using EMLeditor, automatically generate properly formatted GPS coordinates park bounding boxes. like add additional GPS coordinates (specific site locations, transects, survey plots, bounding boxes locations within park, etc) please ! Note: Hopefully won’t edit , best edited spreadsheet application. Columns: geographicDescription Brief description location. northBoundingCoordinate North coordinate southBoundingCoordinate South coordinate eastBoundingCoordinate East coordinate westBoundingCoordinate West coordinate Coordinates must decimal degrees include minus sign (-) latitudes south equator longitudes west prime meridian. points, repeat latitude longitude coordinates respective north/south east/west columns. need convert UTMs, try using utm_to_ll() function R/QCkit package. Currently EML handles points rectangles well. least precise end spectrum enter entire park unit geographic convenient way get coordinates, see get_park_polygon() function R/EMLeditor package. strongly encourage precise possible geographicCoverage provide sampling points (e.g. along transect) whenever possible. information (eventually) displayed map DataStore Reference page data package points also directly discoverable DataStore searches. CUI concerns specific locations sites, consider fuzzing rather completely removing . One good tool fuzzing geographic coordinates fuzz_location() function R/QCkit package.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"taxonomic_coverage-txt","dir":"Articles","previous_headings":"","what":"taxonomic_coverage.txt","title":"Editing .txt Files","text":"Example Describes biological organisms occurring data helps resolve authority systems. matches can made, full taxonomic hierarchy scientific common names automatically rendered final EML metadata. enables future users search taxonomic level interest across data packages repositories. Note: Hopefully don’t edit . Columns: taxa_raw Taxon name occurs data listed metadata value listed name_resolved column. Can single word species binomial. name_type Type name. Can “scientific” “common”. name_resolved Taxons name found authority system. authority_system Authority system taxa’s name found. Can : “ITIS”, “WORMS”, “”GBIF“. authority_id Taxa’s identifier authority system (e.g. 168469).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"provenance-txt","dir":"Articles","previous_headings":"","what":"provenance.txt","title":"Editing .txt Files","text":"Example Describes source datasets. Explicitly listing DOIs /URLs input data help future users understand greater detail derived data created may day able assign attribution creators referenced datasets. Provenance metadata can automatically generated supported repositories simply specifying identifier (.e. EDI) systemID column. unsupported repositories (e.g. DataStore), systemID column left blank. many monitoring protocols, may input datasets, instead data package based newly collected & original data. case, leave provenance.txt blank. Columns: dataPackageID Data package identifier. Supplying valid packageID systemID (supported systems) needed create complete provenance record. systemID System (.e. data repository) identifier. Currently supported systems : EDI (Environmental Data Initiative). Leave column blank unless specifying supported system. url URL linking online source (.e. data, paper, etc.). Required source can’t defined packageID systemID. onlineDescription Description data source. Required source can’t defined packageID systemID. title source title. Required source can’t defined packageID systemID. givenName creator contacts given name. Required source can’t defined packageID systemID. middleInitial creator contacts middle initial. Required source can’t defined packageID systemID. surName creator contacts middle initial. Required source can’t defined packageID systemID. role “creator” “contact” data source. Required source can’t defined packageID systemID. Add creator contact separate rows within template, information row duplicated except givenName, middleInitial, surName (organizationName), role fields. organizationName Name organization creator contact belongs . Required source can’t defined packageID systemID. email Email creator contact. Required source can’t defined packageID systemID.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"annotations-txt","dir":"Articles","previous_headings":"","what":"annotations.txt","title":"Editing .txt Files","text":"Example Adds semantic meaning metadata (variables, locations, persons, etc.) links ontology terms. enables greater human understanding machine actionability (linked data) greatly improves discoverability interoperability data general. Columns: id unique identifier element annotated. element element annotated. context context subject (.e. element value) annotated (e.g. column name occurs one data tables, need know table came .). subject element value annotated. predicate_label predicate label (.k.. property) describing relation subject object. label copied directly ontology. predicate_uri predicate label URI copied directly ontology. object_label object label (.k.. value) describing subject. label copied directly ontology. object_uri object URI copied ontology.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a03_Template_edits.html","id":"additional_info","dir":"Articles","previous_headings":"","what":"additional_info","title":"Editing .txt Files","text":"Example Ancillary info captured templates.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a04_Editing_fixing_eml.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Editing or fixing EML Files","text":"EMLeditor designed generate metadata interacts DataStore also allow users ‘surgically’ edit EML fields without edit .txt templates run EML::make_eml() command (can time consuming, especially substantial taxonomic information). Using EMLeditor also means don’t need edit .xml file hand. strongly discourage editing .xml file hand! find typos mistakes EML data package reviewed changes EML requested, hope can use EMLeditor functions make changes EML rather re-running entire EML creation script. run DPchecker::run_congruence_checks() function data package, warning error returned include indication address problem. problem metadata (opposed data), DPchecker give specific function can use fix metadata using EMLeditor package. edit EML R using EMLeditor, first need load *_metadata.xml file R, edit R object within R, write edited R object back .xml.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a04_Editing_fixing_eml.html","id":"function-list","dir":"Articles","previous_headings":"","what":"Function list","title":"Editing or fixing EML Files","text":"References page comprehensive list available functions links documentation use function along examples.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a04_Editing_fixing_eml.html","id":"loading--xml-into-r","dir":"Articles","previous_headings":"","what":"Loading .xml into R","title":"Editing or fixing EML Files","text":"two main methods loading *_metadata.xml file R work . can either use DPchecker load_metadata() function can use EML read_eml() function. main benefit load_metadata() don’t need specify file name type, less typing. downside load_metadata() less flexible: multiple .xml files directory metadata file doesn’t end *_metadata.xml just won’t work. Using load_metadata(): Using read_eml():","code":"#assuming your metadata file is in your current working directory: metadata <- load_metadata()  #assuming your metadata file is in sub-directory of your current directory, \"../other/directory\": dir <- here::here(\"other\", \"directory\") metadata <- load_metadata(directory = dir) #this assumes your metadata file is in your current working directory and is called 'filename_metadata.xml' metadata <- read_eml(\"filename_metadata.xml\", from = \"xml\")  #or if your metadata is in a different directory, change to that directory: setwd(\"C:/Users/username/Documents/data_package_directory\") metadata <- read_eml(\"filename_metadata.xml\", from = \"xml\")"},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a04_Editing_fixing_eml.html","id":"edit-the-title","dir":"Articles","previous_headings":"Examples of editing metadata","what":"Edit the title","title":"Editing or fixing EML Files","text":"First, might want view current title: can consider editing title:","code":"get_title(metadata) metadata <- set_title(metadata, \"My New and Improved Data Package Title\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a04_Editing_fixing_eml.html","id":"edit-the-abstract","dir":"Articles","previous_headings":"Examples of editing metadata","what":"Edit the abstract","title":"Editing or fixing EML Files","text":"View current abstract: Supply new abstract. function relatively simple support multiple parts paragraphs, ’s probably best keep text relatively short straight forward.","code":"get_abstract(metadata) new_abstract <- \"Put your new abstract here. It should be more than 20 words and shoudl be sufficient for a knowledgeable person to understand what whas done, when, and where including both data collection and data QA/QC but does nto need to be as detailed as a methods statement\" metadata <- set_abstract(metadata, new_abstract)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a04_Editing_fixing_eml.html","id":"add-orcids","dir":"Articles","previous_headings":"Examples of editing metadata","what":"Add ORCIDs","title":"Editing or fixing EML Files","text":"adding organizations creators. already organizations creators, may want temporarily remove add ORCIDs individuals (see set_creator_order()). know authors/creators data package ORCIDs (didn’t register one making initial metadata), can add ORCIDs individual creators. Make sure list ORCIDs order authors/creators listed. creator ORCID, list NA:","code":"#single author publications: metadata <- set_creator_orcids(metadata, \"1234-1234-1234-1234\")  #multiple author publications where the middle author does not have an ORCID: creator_orcids <- c(\"1234-1234-1234-1234\", NA, \"4321-4321-4321-4321\") metadata <- set_creator_orcids(metadata, creator_orcids)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a04_Editing_fixing_eml.html","id":"add-an-organization-as-an-author","dir":"Articles","previous_headings":"Examples of editing metadata","what":"Add an Organization as an author","title":"Editing or fixing EML Files","text":"can add organization author (“creator”) re-order authors reflect whatever order like appear citation. First, view current authors (“creators”). Note function return list individual creators return organizations may already listed creators/authors: Add organization author:","code":"get_author_list(metadata) [1] \"Smith, John C.\" # Set an outside organization as an author: metadata <- set_creator_orgs(metadata, creator_orgs = \"Broadleaf, Inc.\")  # Set a park unit as a creator metadata <- set_creator_orgs(metadata, park_units = \"YELL\")  # You can also add a list of organizations as authors for collaborative works: networks <- c(\"ROMN\", \"MOJN\") metadata <- set_creator_orgs(metadata, park_units = networks)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a04_Editing_fixing_eml.html","id":"re-order-or-remove-authors","dir":"Articles","previous_headings":"Examples of editing metadata","what":"Re-order or remove authors","title":"Editing or fixing EML Files","text":"may notice author creator add added end list authors/creators. may wish re-order authors/creators. set_creator_order() function’s default interactive mode lists authors order (surName individuals) asks supply order. can also use function remove authors.","code":"metadata <- set_creator_order(metadata) #Your current creators are in the following order:  # Order                   Creator #     1                     Smith #     2           Broadleaf, Inc. #     3 Yellowstone National Park #     4     Mojave Desert Network #     5    Rocky Mountain Network  #Please enter comma-separated numbers for the new creator order. #Example: put 5 creators in reverse order, enter: 5, 4, 3, 2, 1 #Example: remove the 3rd item (out of 5) enter: 1, 2, 4, 5  5, 4, 3, 2, 1  #Your new creators order is: # Order                   Creator #     1    Rocky Mountain Network #     2     Mojave Desert Network #     3 Yellowstone National Park #     4           Broadleaf, Inc. #     5                     Smith"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a04_Editing_fixing_eml.html","id":"write-your-edits-to--xml","dir":"Articles","previous_headings":"","what":"Write your edits to .xml","title":"Editing or fixing EML Files","text":"writing edits .xml, make sure validate EML: Write R object .xml. Don’t forget filename must end *_metadata.xml: point, re-run congruence checks make sure data package still passes (passes previous warnings/errors got):","code":"test_validate_schema(metadata) write_eml(metadata, \"filename_metadata.xml\") #Assuming you data package is in the working directory and there are no extra .csv or .xml files in that directory: run_congruence_checks()"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a05_advanced_functionality.html","id":"test-functions-on-irmadev","dir":"Articles","previous_headings":"","what":"Test functions on irmadev","title":"Advanced Functionality","text":"Several EMLeditor functions allow write DataStore (set_datastore_doi(), upload_data_package(), etc). default functions write production (.e “public”) version DataStore. However, want test scripts, can set functions write development version DataStore (irmadev): Test putting draft reference irmadev: Test uploading data package irmadev: Note must signed VPN able view reference uploaded files irmadev.","code":"set_datastore_doi(metadata, dev = TRUE) upload_data_package(dev = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a05_advanced_functionality.html","id":"scripting-with-emleditor","dir":"Articles","previous_headings":"","what":"Scripting with EMLeditor","title":"Advanced Functionality","text":"interactive feedback prompts provided EMLeditor functions can turned enable efficient scripting. “set_” class functions parameter, force defaults force = FALSE. turn feedback prompts, set force = TRUE calling function. careful using functions way may - may - make changes metadata advised change lack change. Inspect final product carefully.","code":"metadata <- set_title(metadata, \"My new title\", force = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a05_advanced_functionality.html","id":"custom-publisherproducer","dir":"Articles","previous_headings":"","what":"Custom Publisher/Producer","title":"Advanced Functionality","text":"EMLeditor functions designed primarily use staff National Park Service publication data packages DataStore. Consequently, “set_” class functions silently perform two operations default: set publisher National Park Service (location Fort Collins office) specify agency created data package NPS set field “NPS” TRUE can prevent set_class functions performing operations changing default status parameter NPS = TRUE NPS = FALSE. leave publisher information untouched create additionalMetadata item agency created data package. like set publisher something Fort Collins Office National Park Service like set agency created data package something NPS, use set_publisher() function. sure specify NPS = FALSE function perform default operations (set publisher NPS Fort Collins Office set agency NPS). Warning: set_publisher() used , likely rare, circumstances: publisher National Park Service contact address publisher central office Fort Collins (data packages uploaded DataStore published Fort Collins Office NPS) originating agency NPS (.e. contractor partner organization) data package created NPS ’s probably good idea take look arguments need supply set_publisher() function prior using : can add custom publisher like: use “set_” class functions default settings setting custom publisher, overwrite custom publisher! Make sure include parameter NPS = FALSE invoke additional “set_” functions:","code":"args(set_publisher) #function (eml_object, org_name = \"NPS\", street_address,  #    city, state, zip_code, country, URL, email, ror_id, for_or_by_NPS = TRUE,  #    force = FALSE, NPS = FALSE) metadata <- set_publisher(metadata, org_name = \"Broadleaf\",                           street_address = \"1234 Strasse St.\",                           city = \"Metropolis\",                           State = \"Denial\",                           zip_code = \"12345\",                           country = \"The Wild, Wild West\",                           URL = \"https://error404.com\",                            email = \"gesundheit@krankenhaus.de\",                           ror_id = \"NA\",                           for_or_by_NPS = FALSE,                           force = FALSE,                           NPS = FALSE) metadata <- set_additional_info(metadata,                                 \"Info for the Notes section on DataStore\",                                 NPS = FALSE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/articles/a05_advanced_functionality.html","id":"view-all-functions","dir":"Articles","previous_headings":"","what":"View all functions","title":"Advanced Functionality","text":"comprehensive list available EMLeditor functions can found via Reference tab top web page. Click function read associated documentation.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Baker. Author, maintainer. Judd Patterson. Author. Issac Quevedo. Contributor. Melina Kompella. Contributor. Amy Sherman. Contributor.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Baker R, Patterson J (2025). EMLeditor: View Edit EML Metadata. R package version 1.1.0, https://github.com/nationalparkservice/EMLeditor.","code":"@Manual{,   title = {EMLeditor: View and Edit EML Metadata},   author = {Robert Baker and Judd Patterson},   year = {2025},   note = {R package version 1.1.0},   url = {https://github.com/nationalparkservice/EMLeditor}, }"},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"View and Edit EML Metadata","text":"goal EMLeditor edit EML-formatted xml files. Specifically, EMLeditor provides many functions useful U.S. National Park Service generating metadata statistical data packages uploaded DataStore. NPS affiliation assumed default. However, functions viewing editing metadata may useful people outside NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/index.html","id":"installation-and-updates","dir":"","previous_headings":"","what":"Installation and updates","title":"View and Edit EML Metadata","text":"can install update development version EMLeditor GitHub : install packages NPSdataverse (including EMLeditor):","code":"# install.packages(\"pak\") pak::pkg_install(\"nationalparkservice/EMLeditor\") pak::pkg_install(\"nationalparkservice/NPSdataverse\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/index.html","id":"workflow-outline","dir":"","previous_headings":"","what":"Workflow outline","title":"View and Edit EML Metadata","text":"EMLeditor comes template Rmarkdown script can edit generate fully fledged EML document. script includes accompanying documentation includes information : Generating initial EML document using R/EMLassemblyline package functions Adding NPS specific DataStore specific EML elements using R/EMLeditor package functions Generating draft data package reference DataStore incorporating DOIs metadata Checking EML document make sure schema-valid passes necessary tests uploading DataStore (using run_congruence_checks() function DPchecker package) Uploading completed data package DataStore Please ACTIVATE DataStore reference: prior activation, data packages need reviewed via yet---created process.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/index.html","id":"accessing-the-eml-creation-script","dir":"","previous_headings":"","what":"Accessing the EML creation script","title":"View and Edit EML Metadata","text":"access EML creation script within EMLeditor, install (update) EMLeditor package restart R. within Rstudio, select “File” drop-menu choose “New File” (first option). within “New File” menu, select “Rmarkdown…”. pop-menu, select “Template left hand side. choose template,”Editable_EML_Creation_Workflow {EMLeditor}” click “OK”.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/index.html","id":"additional-considerations","dir":"","previous_headings":"","what":"Additional considerations","title":"View and Edit EML Metadata","text":"use EMLeditor functions alter metadata (e.g. “set” class functions) also silently add National Park Service publisher (including location, ROR id, etc) metadata unless set NPS=FALSE. leave default setting NPS=TRUE, EMLeditor also assume data package created “NPS” add information metadata. EMLeditor also add information version EMLeditor used edit metadata (instance used “set” class functions).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/EMLeditor-package.html","id":null,"dir":"Reference","previous_headings":"","what":"EMLeditor: View and Edit EML Metadata — EMLeditor-package","title":"EMLeditor: View and Edit EML Metadata — EMLeditor-package","text":"package use U.S. National Park Service data scientists managers seeking generate EML-formatted metadata datapackages. EML-formatted .xml files typically constructed using EDI's EMLassemblyline package imported R-object using EML package. EMLeditor allows user view contents R object add/edit aspects metadata crucial publication U.S. National Park Service DataStore repository. instance, user can view edit DOI, link DRR, Park Unit connections, information Confidential Unclassified Information (CUI), . EMLeditor allows user write mockup README.txt preview README automatically generated DataStore upon upload look like.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/EMLeditor-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EMLeditor: View and Edit EML Metadata — EMLeditor-package","text":"Maintainer: Robert Baker robert_baker@nps.gov (ORCID) Authors: Judd Patterson Judd_Patterson@nps.gov (ORCID) contributors: Issac Quevedo (ORCID) [contributor] Amy Sherman (ORCID) [contributor]","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_abstract.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the abstract — get_abstract","title":"returns the abstract — get_abstract","text":"returns text  tag.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_abstract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the abstract — get_abstract","text":"","code":"get_abstract(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_abstract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the abstract — get_abstract","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_abstract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the abstract — get_abstract","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_abstract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the abstract — get_abstract","text":"get_abstract returns text  tag attempts clean common text issues, enforcing UTF-8 formatting, getting rid carriage returns, new lines,   tags mucks layout, line breaks, etc. see characters like abstract, make sure edit abstract text editor (e.g. Notepad Word). save text new object view using writeLines()","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_abstract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the abstract — get_abstract","text":"","code":"if (FALSE) { # \\dontrun{ abstract <- get_abstract(eml_object) writeLines(abstract) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_additional_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get additional information (Notes on DataStore) — get_additional_info","title":"Get additional information (Notes on DataStore) — get_additional_info","text":"get_additional_info() returns text additionalInformation element EML. text used populate \"Notes\" sectionon DataStore reference page. strict limit can go additionalInformation/Notes section. However, DataStore filter stray characters &#13;. Use set_additional_info() function edit replace text stored additionalInformation (notes) field.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_additional_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get additional information (Notes on DataStore) — get_additional_info","text":"","code":"get_additional_info(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_additional_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get additional information (Notes on DataStore) — get_additional_info","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_additional_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get additional information (Notes on DataStore) — get_additional_info","text":"String","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_additional_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get additional information (Notes on DataStore) — get_additional_info","text":"","code":"if (FALSE) { # \\dontrun{ get_additional_info(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_attribute_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates attribute tables from an EML object — get_attribute_tables","title":"Creates attribute tables from an EML object — get_attribute_tables","text":"get_attribute_tables takes EML object returns nested table attribute tables pulled metadata, using EML::get_attributes()","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_attribute_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates attribute tables from an EML object — get_attribute_tables","text":"","code":"get_attribute_tables(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_attribute_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates attribute tables from an EML object — get_attribute_tables","text":"eml_object R object imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_attribute_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates attribute tables from an EML object — get_attribute_tables","text":"nested table one attribute table data table EML file","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_attribute_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates attribute tables from an EML object — get_attribute_tables","text":"","code":"if (FALSE) { # \\dontrun{ get_attribute_tables(example_EML) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_author_list.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the authors — get_author_list","title":"returns the authors — get_author_list","text":"get_author_list() returns text string authors listed  tag.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_author_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the authors — get_author_list","text":"","code":"get_author_list(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_author_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the authors — get_author_list","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_author_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the authors — get_author_list","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_author_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the authors — get_author_list","text":"get_author_list() assumes every author least 1 first name (either givenName givenName1) one last name (surName). Middle names (givenName2) optional. author List formatted last name, comma,  first name first author fist name, last name subsequent authors. last author's name preceded ''.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_author_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the authors — get_author_list","text":"","code":"if (FALSE) { # \\dontrun{ get_author_list(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_begin_date.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the first date — get_begin_date","title":"returns the first date — get_begin_date","text":"get_begin_date returns date earliest data point data package","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_begin_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the first date — get_begin_date","text":"","code":"get_begin_date(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_begin_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the first date — get_begin_date","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_begin_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the first date — get_begin_date","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_begin_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the first date — get_begin_date","text":"returns date  tag. Although dates formatted according ISO-8601 (YYYY-MM-DD) also check common formats return date text string: \"DD Month YYYY\"","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_begin_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the first date — get_begin_date","text":"","code":"if (FALSE) { # \\dontrun{ get_begin_date(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_catvar_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates categorical variable tables from an EML object — get_catvar_tables","title":"Creates categorical variable tables from an EML object — get_catvar_tables","text":"get_catvar_tables takes EML object returns nested table categorical variable tables pulled metadata, using EML::get_attributes()","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_catvar_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates categorical variable tables from an EML object — get_catvar_tables","text":"","code":"get_catvar_tables(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_catvar_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates categorical variable tables from an EML object — get_catvar_tables","text":"eml_object R object imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_catvar_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates categorical variable tables from an EML object — get_catvar_tables","text":"nested table one catvar table data table EML file","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_catvar_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates categorical variable tables from an EML object — get_catvar_tables","text":"","code":"if (FALSE) { # \\dontrun{ get_catvar_tables(example_EML) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the data package citation — get_citation","title":"returns the data package citation — get_citation","text":"returns Chicago manual style citation data package","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the data package citation — get_citation","text":"","code":"get_citation(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the data package citation — get_citation","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the data package citation — get_citation","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_citation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the data package citation — get_citation","text":"get_citation allows user preview citation look like. Harper's Ferry Style Guide recommends using Chicago Manual Style formatting citations. citation formatted according modified version Chicago Manual Style's Author-Date journal article format currently Chicago Manual Style format specified datasets data packages. compliance DataCite's recommendations regarding including DOIs citations, citation displays entire DOI https://www.doi.org/10.58370/xxxxxx\".","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_citation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the data package citation — get_citation","text":"","code":"if (FALSE) { # \\dontrun{ get_citation(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_content_units.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the park unit connections — get_content_units","title":"returns the park unit connections — get_content_units","text":"returns string park unit codes data collected","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_content_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the park unit connections — get_content_units","text":"","code":"get_content_units(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_content_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the park unit connections — get_content_units","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_content_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the park unit connections — get_content_units","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_content_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the park unit connections — get_content_units","text":"get_content_units() accesses contents  tags returns contents tag contains text \"NPS Unit Connections\". , alerts user suggests adding park unit connections using set_park_units() function.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_content_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the park unit connections — get_content_units","text":"","code":"if (FALSE) { # \\dontrun{ get_content_units(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a CUI statement — get_cui","title":"returns a CUI statement — get_cui","text":"#'  Deprecated favor get_cui_code(). get_cui() returns English-language translation CUI codes","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a CUI statement — get_cui","text":"","code":"get_cui(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns a CUI statement — get_cui","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns a CUI statement — get_cui","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns a CUI statement — get_cui","text":"get_cui() accesses contents Controlled Unclassified Information (CUI) tag,  returns appropriate string english-language text based properties CUI code. thee  tag empty exist, get_cui alerts user suggests specifying CUI using set_cui() funciton.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns a CUI statement — get_cui","text":"","code":"if (FALSE) { # \\dontrun{ get_cui(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_code.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a CUI dissemination code statement — get_cui_code","title":"returns a CUI dissemination code statement — get_cui_code","text":"get_cui_code() returns English-language translation CUI dissemination codes. supersedes get_cui(), deprecated.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a CUI dissemination code statement — get_cui_code","text":"","code":"get_cui_code(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns a CUI dissemination code statement — get_cui_code","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns a CUI dissemination code statement — get_cui_code","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns a CUI dissemination code statement — get_cui_code","text":"get_cui_code() accesses contents Controlled Unclassified Information (CUI) tag,  returns appropriate string english-language text based properties CUI code. thee  tag empty exist, get_cui alerts user suggests specifying CUI using set_cui() funciton.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns a CUI dissemination code statement — get_cui_code","text":"","code":"if (FALSE) { # \\dontrun{ get_cui(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_marking.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the CUI marking — get_cui_marking","title":"Returns the CUI marking — get_cui_marking","text":"data controlled unclassified information (CUI), get_cui_marking() eturns specific marking english language explanation marking. data without CUI, informs CUI returns code \"PUBLIC\".","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_marking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the CUI marking — get_cui_marking","text":"","code":"get_cui_marking(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_marking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the CUI marking — get_cui_marking","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_marking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the CUI marking — get_cui_marking","text":"String (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_marking.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns the CUI marking — get_cui_marking","text":"CUI markings defined U.S. National Archives (nara.gov). NPS users can designate one three CUI markings, plus code \"PUBLIC\" (essentially, marking necessary). three markings : SP-NPSR, SP-HISTP SP-ARCHR. information CUI markings, please visit CUI Markings list maintained National Archives.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_cui_marking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the CUI marking — get_cui_marking","text":"","code":"if (FALSE) { # \\dontrun{ get_cui_marking(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the DOI — get_doi","title":"returns the DOI — get_doi","text":"returns text string DOI data package","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the DOI — get_doi","text":"","code":"get_doi(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the DOI — get_doi","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the DOI — get_doi","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_doi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the DOI — get_doi","text":"get_doi() accesses contents tag text manipulation return string DOI including URL prefaced 'doi: '.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_doi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the DOI — get_doi","text":"","code":"if (FALSE) { # \\dontrun{ get_doi(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the DOI of the associated DRR — get_drr_doi","title":"returns the DOI of the associated DRR — get_drr_doi","text":"get_drr_doi returns text string associated Data Release Report (DRR)'s DOI.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the DOI of the associated DRR — get_drr_doi","text":"","code":"get_drr_doi(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the DOI of the associated DRR — get_drr_doi","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the DOI of the associated DRR — get_drr_doi","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_doi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the DOI of the associated DRR — get_drr_doi","text":"get_drr_doi accesses  tag(s) searches alternateIdentifier tag. element found, contents element returned. title element empty present, user warned pointed set_drr function add DOI associated DRR.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_doi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the DOI of the associated DRR — get_drr_doi","text":"","code":"if (FALSE) { # \\dontrun{ get_drr_doi(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_title.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the title of the associated DRR — get_drr_title","title":"returns the title of the associated DRR — get_drr_title","text":"get_drr_title returns text string associated Data Release Report (DRR)'s Title.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the title of the associated DRR — get_drr_title","text":"","code":"get_drr_title(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the title of the associated DRR — get_drr_title","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the title of the associated DRR — get_drr_title","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_title.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the title of the associated DRR — get_drr_title","text":"get_drr_title accesses useageCitation dataset returns title element, found. found, user warned pointed ot set_drr function add title associated DRR.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_drr_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the title of the associated DRR — get_drr_title","text":"","code":"if (FALSE) { # \\dontrun{ get_drr_title(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_ds_id.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the DataStore Reference ID — get_ds_id","title":"returns the DataStore Reference ID — get_ds_id","text":"get_ds_id returns DataStore Reference ID string text.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_ds_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the DataStore Reference ID — get_ds_id","text":"","code":"get_ds_id(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_ds_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the DataStore Reference ID — get_ds_id","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_ds_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the DataStore Reference ID — get_ds_id","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_ds_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the DataStore Reference ID — get_ds_id","text":"accesses DOI listed  tag trims last 7 digits, identical DataStore Reference ID.  tag empty, notifies user DOI associate metadata suggests adding one using set_doi() (edit_doi() also work).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_ds_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the DataStore Reference ID — get_ds_id","text":"","code":"if (FALSE) { # \\dontrun{ get_ds_id(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_eml_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a simple list of eml elements — get_eml_simple","title":"Returns a simple list of eml elements — get_eml_simple","text":"function wraps EML::get_eml returns requested object much simpler format. works best eml elements child elements.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_eml_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a simple list of eml elements — get_eml_simple","text":"","code":"get_eml_simple(eml_object, eml_element)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_eml_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a simple list of eml elements — get_eml_simple","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\"). eml_element string indicating element within eml_object accessed returned.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_eml_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a simple list of eml elements — get_eml_simple","text":"list values","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_eml_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a simple list of eml elements — get_eml_simple","text":"","code":"if (FALSE) { # \\dontrun{ get_eml_simple(eml_object, \"geographicDescription\") } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_end_date.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the last date — get_end_date","title":"returns the last date — get_end_date","text":"get_end_date returns date last data point data package","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_end_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the last date — get_end_date","text":"","code":"get_end_date(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_end_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the last date — get_end_date","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_end_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the last date — get_end_date","text":"text sting","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_end_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the last date — get_end_date","text":"returns date  tag. Although dates formatted according ISO-8601 (YYYY-MM-DD) also check common formats return date text string: \"DD Month YYYY\"","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_end_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the last date — get_end_date","text":"","code":"if (FALSE) { # \\dontrun{ get_end_date(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_file_info.html","id":null,"dir":"Reference","previous_headings":"","what":"displays file names, sizes, and descriptions — get_file_info","title":"displays file names, sizes, and descriptions — get_file_info","text":"get_file_info returns plain-text table containing file names, file sizes, short descriptions files.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_file_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"displays file names, sizes, and descriptions — get_file_info","text":"","code":"get_file_info(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_file_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"displays file names, sizes, and descriptions — get_file_info","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_file_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"displays file names, sizes, and descriptions — get_file_info","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_file_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"displays file names, sizes, and descriptions — get_file_info","text":"get_file_info returns file names (listed  tag), size files (listed  tag) converts bytes (B) easily interpretable unit (KB, MB, GB, etc). Technically uses powers 2^10 KB actually kibibyte (1024 bytes) kilobyte (1000 bytes). Similarly MB mebibyte megabyte, GB gibibyte gigabyte, etc. practical purposes probably irrelevant. Finally, short description provided file ( tag).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_file_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"displays file names, sizes, and descriptions — get_file_info","text":"","code":"if (FALSE) { # \\dontrun{ get_file_info(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_lit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get literature cited — get_lit","title":"Get literature cited — get_lit","text":"get_lit prints bibtex fromated literature cited screen.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_lit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get literature cited — get_lit","text":"","code":"get_lit(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_lit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get literature cited — get_lit","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_lit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get literature cited — get_lit","text":"character string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_lit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get literature cited — get_lit","text":"get_lit currently supports bibtex formatted references. get_lit gets items  tag prints screen.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_lit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get literature cited — get_lit","text":"","code":"if (FALSE) { # \\dontrun{ get_lit(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get methods — get_methods","title":"Get methods — get_methods","text":"get_methods() returns text stored methods element EML metadata. returned text manipulated way. DataStore unlists returned object (get rid tags $methodStep, $methodStep$description $methodStep$description$para remove numbers brackets). \"\\n\" character combination interpreted line break (blank lines). However, DataStore filter stray characters &#13;. Use set_methods() function edit replace text stored methods field.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get methods — get_methods","text":"","code":"get_methods(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get methods — get_methods","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get methods — get_methods","text":"List","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get methods — get_methods","text":"","code":"if (FALSE) { # \\dontrun{ get_methods(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_producing_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the Producing Units — get_producing_units","title":"Returns the Producing Units — get_producing_units","text":"get_producing_units returns whatever metadataProvider eml element. Set producing units using set_producing_units function.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_producing_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the Producing Units — get_producing_units","text":"","code":"get_producing_units(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_producing_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the Producing Units — get_producing_units","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_producing_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the Producing Units — get_producing_units","text":"character sting","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_producing_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the Producing Units — get_producing_units","text":"","code":"if (FALSE) { # \\dontrun{ get_producing_units(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_publisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the publisher information — get_publisher","title":"Returns the publisher information — get_publisher","text":"get_publisher() returns list includes information publisher stored EML.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_publisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the publisher information — get_publisher","text":"","code":"get_publisher(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_publisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the publisher information — get_publisher","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_publisher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the publisher information — get_publisher","text":"List.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_publisher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the publisher information — get_publisher","text":"","code":"if (FALSE) { # \\dontrun{ get_publisher(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_title.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the data package title — get_title","title":"returns the data package title — get_title","text":"get_title returns text string title data package","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the data package title — get_title","text":"","code":"get_title(eml_object)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the data package title — get_title","text":"eml_object R object imported (typically EML-formatted .xml file) using EmL::read_eml(, =\"xml\").","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the data package title — get_title","text":"text string","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_title.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"returns the data package title — get_title","text":"accesses ","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/get_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the data package title — get_title","text":"","code":"if (FALSE) { # \\dontrun{ get_title(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/remove_datastore_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove files from a data package Reference on DataStore — remove_datastore_files","title":"Remove files from a data package Reference on DataStore — remove_datastore_files","text":"remove_datastore_files() function requires logged VPN. must also permissions edit DataStore Reference question, Reference must activated. case, remove_datastore_files() detaches files associated relevant DataStore Reference. files detached, re-attached.  Instead, updated files can re-uploaded attached reference via upload_data_package(). interactive mode (force = FALSE), informed Reference number, Reference title, Reference creation date, list files currently attached Reference. files successfully detached, informed list file names detached. Note remove_datastore_files() intended used data package Reference type DataStore theory allow remove files reference type.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/remove_datastore_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove files from a data package Reference on DataStore — remove_datastore_files","text":"","code":"remove_datastore_files(data_store_reference, force = FALSE, dev = FALSE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/remove_datastore_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove files from a data package Reference on DataStore — remove_datastore_files","text":"data_store_reference Integer. 7-digit DataStore Reference number force Logical. Defaults FALSE. Set TRUE avoid interactive components user feedback. dev Logical. Defaults FALSE. set TRUE want detete files DataStore reference Development server.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/remove_datastore_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove files from a data package Reference on DataStore — remove_datastore_files","text":"","code":"if (FALSE) { # \\dontrun{ remove_datastore_files(1234567) remove_datastore_files(1234567, force = TRUE, dev = TRUE) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_abstract.html","id":null,"dir":"Reference","previous_headings":"","what":"adds an abstract — set_abstract","title":"adds an abstract — set_abstract","text":"set_abstract() adds (replaces) simple abstract.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_abstract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adds an abstract — set_abstract","text":"","code":"set_abstract(eml_object, abstract, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_abstract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adds an abstract — set_abstract","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). abstract text string abstract. can generate directly R import .txt file. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_abstract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"adds an abstract — set_abstract","text":"EML-formatted R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_abstract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"adds an abstract — set_abstract","text":"Checks abstract. abstract found, inserts abstract given @param abstract. existing abstract found, user asked whether want replace appropriate action taken. Currently set_abstract allow complex formatting bullets, tabs, multiple spaces. can add line breaks \"\\n\" new paragraph (blank line text) \"\\n\\n\". strongly encouraged open abstract text editor notepad make sure stray characters. need multiple paragraphs, need via EMLassemblyline (now).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_abstract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"adds an abstract — set_abstract","text":"","code":"if (FALSE) { # \\dontrun{ eml_object <- set_abstract(eml_object, \"This is a very short abstract\") } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_additional_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Notes for DataStore landing page — set_additional_info","title":"Set Notes for DataStore landing page — set_additional_info","text":"set_additional_info() add information additionalInfo element EML.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_additional_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Notes for DataStore landing page — set_additional_info","text":"","code":"set_additional_info(eml_object, additional_info, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_additional_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Notes for DataStore landing page — set_additional_info","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). additional_info String. become \"notes\" DataStore landing page. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_additional_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Notes for DataStore landing page — set_additional_info","text":"EML-formated R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_additional_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Notes for DataStore landing page — set_additional_info","text":"contents additionalInformation element used populate 'notes' field DataStore landing page. Users may want edit notes errors non-ASCII text characters discovered notes prominently displayed DataStore. avoid non-standard characters, users highly encouraged generate Notes using text editor Notepad rather word processor MS Word. time, set_additional_info() support complex formatting , bullets, tabs, multiple spaces. can add line breaks \"\\n\" new paragraph (blank line text) \"\\n\\n\".","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_additional_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Notes for DataStore landing page — set_additional_info","text":"","code":"if (FALSE) { # \\dontrun{ eml_object <- set_additional_info(eml_object,  \"Some text for the Notes section on DataStore.\") } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_content_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Park Unit Connections to metadata — set_content_units","title":"Add Park Unit Connections to metadata — set_content_units","text":"set_content_units() adds specified park units N, E, S, W bounding boxes . information used fill Content Unit Links field DataStore. Invalid park unit codes return error function terminate. know park unit code, see get_park_code() NPSutils package].","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_content_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Park Unit Connections to metadata — set_content_units","text":"","code":"set_content_units(eml_object, park_units, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_content_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Park Unit Connections to metadata — set_content_units","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). park_units list comma-separated strings string park unit code. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_content_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Park Unit Connections to metadata — set_content_units","text":"EML-formatted R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_content_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Park Unit Connections to metadata — set_content_units","text":"Adds Content Unit Link(s) geographicCoverage. Content Unit Links(s) (typically) four-letter codes describing park unit(s) data collected (e.g. ROMO, ROMN). park unit given separate geographicCoverage element. content unit link, unit name listed geographicDescription prefaced \"NPS Content Unit Link:\". geographicCoverage element given attribute \"system = content unit link\". Required child elements (bounding coordinates) auto populated produce rectangle encompasses park unit question. default force=FALSE option retained, user shown existing content unit links (exist) asked 1) retain 2) add 3) replace . force set TRUE, interactive components skipped existing content unit links replaced.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_content_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Park Unit Connections to metadata — set_content_units","text":"","code":"if (FALSE) { # \\dontrun{ park_units <- c(\"ROMO\", \"YELL\") set_content_units(eml_object, park_units) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orcids.html","id":null,"dir":"Reference","previous_headings":"","what":"Allows user to add ORCids to the creator — set_creator_orcids","title":"Allows user to add ORCids to the creator — set_creator_orcids","text":"set_creator_orcids() allows users add (remove) ORCiDs creators edit/update existing ORCiDs associated creators. ORCiDs persistent digital identifiers associated individual people remain constant despite name changes. can help disambiguate creators similar names associate products one creator one space despite variations name used (e.g. Rob Baker Robert Baker Robert L. Baker 15 million Robert Bakers). register ORCiD manage ORCiD profile, go https://orcid.org/.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orcids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allows user to add ORCids to the creator — set_creator_orcids","text":"","code":"set_creator_orcids(eml_object, orcids, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orcids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allows user to add ORCids to the creator — set_creator_orcids","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). orcids String. One ORCiDs listed order corresponding creators. Use \"NA\" creator ORCiD. include full URL. Format : xxxx-xxxx-xxxx-xxxx (https://orcid.org/ prefix added ). force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orcids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allows user to add ORCids to the creator — set_creator_orcids","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orcids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Allows user to add ORCids to the creator — set_creator_orcids","text":"ORCiDs supplied list order creators listed. creator ORCiD, put NA (quotes around NA!) list space. consider individual people creators (organizations, automatically skipped). ORCiDs supplied 16-digit string hyphens every 4 digits: xxxx-xxxx-xxxx-xxxx. Please include URL prefix ORCiDs; automatically inserted .","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orcids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Allows user to add ORCids to the creator — set_creator_orcids","text":"","code":"if (FALSE) { # \\dontrun{ #only one creator: mymetadata <- set_creator_orcids(mymetadata, 1234-1234-1234-1234)  #three creators, the second of which does not have an ORCiD: creator_orcids <- c(\"1234-1234-1234-1234\", NA, \"4321-4321-4321-4321\") mymetadata <- set_creator_orcids(mymetadata, creator_orcids) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Rearrange the order of creators (authors) — set_creator_order","title":"Rearrange the order of creators (authors) — set_creator_order","text":"set_creator_order() requires metadata contain two creators. function allows users rearrange order creators (authors DataStore) delete creator.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rearrange the order of creators (authors) — set_creator_order","text":"","code":"set_creator_order(eml_object, new_order = NA, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rearrange the order of creators (authors) — set_creator_order","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). new_order List. Defaults NA interactively re-ordering creators. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rearrange the order of creators (authors) — set_creator_order","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rearrange the order of creators (authors) — set_creator_order","text":"","code":"if (FALSE) { # \\dontrun{ # fully interactive route: meta2 <- set_creator_order(eml_object)  # specify an order in advance (reverse the order of 2 creators): meta2 <- set_creator_order(eml_object, c(2,1))  # specify an order in advance (remove the second creator): meta2 <- set_creator_order(eml_object, 1)  # scripting route: turn off all function feedback (you must specify the # new creator order when you call the function; you cannot do it # interactively): meta2 <- set_creator_order(eml_object, c(2,1), force=TRUE) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an organization as a creator to metadata (author in DataStore) — set_creator_orgs","title":"Add an organization as a creator to metadata (author in DataStore) — set_creator_orgs","text":"set_creator_orgs() allows user add organization creator metadata. EMLassemblyline can link individual person creator organization associated , currently allow organizations listed creators. set_creator_orgs() takes list organizations (RORs, ) appends end creator list. allows organizations (Network Park) author data packages.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an organization as a creator to metadata (author in DataStore) — set_creator_orgs","text":"","code":"set_creator_orgs(   eml_object,   creator_orgs = NA,   park_units = NA,   RORs = NA,   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an organization as a creator to metadata (author in DataStore) — set_creator_orgs","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). creator_orgs List. Defaults NA. list one organizations. park_units List. Defaults NA. list park units. park units specified, supersede anything listed creator_orgs. RORs List. Defaults NA. optional list one ROR IDs (see https://ror.org) correspond organization question. organization ROR ID (know ), enter \"NA\". force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an organization as a creator to metadata (author in DataStore) — set_creator_orgs","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an organization as a creator to metadata (author in DataStore) — set_creator_orgs","text":"set_creator_orgs() merely appends organizations, 1) assumes already one creator (required EMLassemblyline) 2) allow user change authorship order. change order authors, see set_creator_order(). Creator organizations RORs need supplied two lists organization ROR correctly matched (.e. 3rd organization associated 3rd ROR list). one creator organizations ROR, enter \"NA\". can use park_units parameter specify park units. utilize IRMA units look-service fill organizationName element, thus ensuring spelling errors deviations unit names. can use either park_units creator_orgs specified park_units, -write creator_orgs function call. Thus, like add park units creators non-park unit organization creator need call function twice. specifying park_units, added order occur IRMA units list, necessarily order supplied function. Use set_creator_order() re-order desired.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_creator_orgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an organization as a creator to metadata (author in DataStore) — set_creator_orgs","text":"","code":"if (FALSE) { # \\dontrun{  #add one organization and it's ROR:  mymetadata <- set_creator_orgs(mymetadata, \"National Park Service\", RORs=\"044zqqy65\")   #add one organization that does not have a ROR:  mymetadata <- set_creator_orgs(mymetadata, \"My Favorite ROR-less Organization\")   #add multiple organizations, some of which do not have RORs:  my_orgs <- c(\"National Park Service\", \"My Favorite ROR-less Organization\")  my_RORs <- c(\"044zqqy65\", \"NA\")   mymetadata <- set_creator_orgs(mymetadata, my_orgs, RORs=my_RORs)   #add multiple park units as organization names:  park_units <- c(\"ROMN\", \"SFCN\", \"YELL\")   mymetadata <- set_creator_orgs(mymetadata, park_units=park_units)   } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds CUI to metadata — set_cui","title":"Adds CUI to metadata — set_cui","text":"#'  set_cui adds CUI dissemination codes EML metadata","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds CUI to metadata — set_cui","text":"","code":"set_cui(   eml_object,   cui_code = c(\"PUBLIC\", \"NOCON\", \"DL ONLY\", \"FEDCON\", \"FED ONLY\"),   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds CUI to metadata — set_cui","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). cui_code string consisting one 5 potential CUI codes. Pay attention spaces: FED - Contains CUI. federal employees access (similar \"internal \" DataStore) FEDCON - Contains CUI. federal employees federal contractors access (also much like current \"internal \" setting DataStore) DL - Contains CUI. available names list individuals (list individuals TBD) NOCON - Contains  CUI. Federal, state, local, tribal employees may access, contractors . PUBLIC - contain CUI. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds CUI to metadata — set_cui","text":"EML-formatted R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds CUI to metadata — set_cui","text":"set_cui adds CUI code tag CUI additionalMetadata/metadata.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds CUI to metadata — set_cui","text":"","code":"if (FALSE) { # \\dontrun{ set_cui(eml_object, \"PUBFUL\") } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds CUI dissemination codes to metadata — set_cui_code","title":"Adds CUI dissemination codes to metadata — set_cui_code","text":"set_cui_code() adds Controlled Unclassified Information (CUI) dissemination codes EML metadata. codes determine can access data. Unless specific mandate restrict data, data available public. CUI dissemination code PUBLIC, CUI marking also PUBLIC (see set_cui_marking()) license set CC0 public domain (see set_int_rights()). data contains CUI need set CUI dissemination code anything PUBLIC, please prepared provide legal justification form appropriate CUI marking (see set_cui_marking()).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds CUI dissemination codes to metadata — set_cui_code","text":"","code":"set_cui_code(   eml_object,   cui_code = c(\"PUBLIC\", \"NOCON\", \"DL ONLY\", \"FEDCON\", \"FED ONLY\"),   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds CUI dissemination codes to metadata — set_cui_code","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). cui_code string consisting one 7 potential CUI codes: PUBLIC, FED , FEDCON, DL , NOCON force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds CUI dissemination codes to metadata — set_cui_code","text":"EML-formatted R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds CUI dissemination codes to metadata — set_cui_code","text":"set_cui_code() adds CUI dissemination code tag CUI additionalMetadata/metadata. available choices CUI dissemination codes NPS (pay attention spaces!): PUBLIC: data contain CUI, dissemination restricted. FED : Contains CUI. federal employees access (similar \"internal \" setting DataStore) FEDCON: Contains CUI federal employees federal contractors access data (, similar DataStore \"internal \" setting) DL : Contains CUI. available named list individuals. (supply list TBD) NOCON - Contains CUI. Federal, state, local, tribal employees may access, contractors . detailed explanation CUI dissemination codes, please see national archives CUI Registry: Limited Dissemination Controls web page.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds CUI dissemination codes to metadata — set_cui_code","text":"","code":"if (FALSE) { # \\dontrun{ set_cui_dissem(eml_object, \"PUBLIC\") } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_marking.html","id":null,"dir":"Reference","previous_headings":"","what":"The function sets the CUI marking for the data package — set_cui_marking","title":"The function sets the CUI marking for the data package — set_cui_marking","text":"Controlled Unclassified Information (CUI) marking different CUI dissemination code. CUI dissemination code (set set_cui_code()) sets can access data package. CUI marking set set_cui_marking() specifies reason () data restricted. CUI dissemination code set PUBLIC, CUI marking must also PUBLIC. CUI dissemination code set anything PUBLIC, CUI marking must set SP-NPSR, SP-HISTP SP-ARCHR.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_marking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The function sets the CUI marking for the data package — set_cui_marking","text":"","code":"set_cui_marking(   eml_object,   cui_marking = c(\"PUBLIC\", \"SP-NPSR\", \"SP-HISTP\", \"SP-ARCHR\"),   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_marking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The function sets the CUI marking for the data package — set_cui_marking","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). cui_marking String. One four options, \"PUBLIC\", \"SP-NPSR\", \"SP-HISTP\" \"SP-ARCHR\" available. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_marking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The function sets the CUI marking for the data package — set_cui_marking","text":"EML-formatted R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_marking.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The function sets the CUI marking for the data package — set_cui_marking","text":"CUI markings legal justification data restricted public. data contain CUI, CUI marking must set PUBLIC (CUI dissemination code must set PUBLIC license must set CC0 Public Domain). data contain CUI (.e. CUI dissemination code PUBLIC), must use CUI marking provide legal justification data restricted. one CUI marking can applied. NPS, following markings available: PUBLIC: data contain CUI, dissemination restricted. SP-NPSR: \"National Park System Resources\" - material contains information concerning nature specific location National Park System resource endangered, threatened, rare, commercially valuable, mineral paleontological objects within System units, objects cultural patrimony within System units. SP-HISTP: \"Historic Properties\" - material contains information related location, character, ownership historic property. SP-ARCHR: \"Archaeological Resources\" - material contains information related information nature location archaeological resource excavation removal requires permit permission. information CUI markings, please visit CUI Markings list maintained National Archives.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_cui_marking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The function sets the CUI marking for the data package — set_cui_marking","text":"","code":"if (FALSE) { # \\dontrun{ eml_object <- set_cui_marking(eml_object, \"PUBLIC\") } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_data_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Update (or add) data table URLs — set_data_urls","title":"Update (or add) data table URLs — set_data_urls","text":"set_data_urls() inspects metadata edits online distribution url dataTable (data file) correspond reference indicated DOI listed metadata. data files stored DataStore part reference data package, need supply URL. data files stored different repository, can supply location.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_data_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update (or add) data table URLs — set_data_urls","text":"","code":"set_data_urls(   eml_object,   url = NULL,   tag = \"information\",   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_data_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update (or add) data table URLs — set_data_urls","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). url string identifies online location data file (uniform resource locator). Defaults NULL DataStore references URL automatically generated via DOI metadata. tag string. Must take values either \"information\" \"download\". Defines nature url set. direct download links use \"download\". anything else, use \"information\". Defaults \"information\" value used DataStore urls. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_data_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update (or add) data table URLs — set_data_urls","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_data_urls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update (or add) data table URLs — set_data_urls","text":"set_data_urls() sets online distribution URL dataTables (data files data package) URL. supply URL, metadata must include DOI (use set_doi() set_datastore_doi() add DOI - automatically update data table urls match new DOI). set_data_urls() assumes DOIs refer digital objects DataStore last 7 digits DOI correspond DataStore Reference ID.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_data_urls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update (or add) data table URLs — set_data_urls","text":"","code":"if (FALSE) { # \\dontrun{ # For data packages on DataStore, no url is necessary: my_metadata <- set_data_urls(my_metadata)  # If data files are NOT on (or going to be on) DataStore, you must supply their location: my_metadata <- set_data_urls(my_metadata, \"https://my_custom_repository.com/data_files\")} # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_datastore_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiates a draft reference and inserts the reserved DOI into metadata — set_datastore_doi","title":"Initiates a draft reference and inserts the reserved DOI into metadata — set_datastore_doi","text":"set_datastore_doi() differs set_doi() function generates draft reference DataStore uses draft reference auto-populate DOI within metadata whereas latter requires manually initiating draft reference DataStore providing reference ID insert DOI metadata.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_datastore_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiates a draft reference and inserts the reserved DOI into metadata — set_datastore_doi","text":"","code":"set_datastore_doi(eml_object, force = FALSE, NPS = TRUE, dev = FALSE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_datastore_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiates a draft reference and inserts the reserved DOI into metadata — set_datastore_doi","text":"eml_object R object imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS. dev Logical. Defaults FALSE. dev = TRUE, api actions re-routed development server (opposed dev = FALSE api actions target production server).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_datastore_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiates a draft reference and inserts the reserved DOI into metadata — set_datastore_doi","text":"EML-formatted R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_datastore_doi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initiates a draft reference and inserts the reserved DOI into metadata — set_datastore_doi","text":"prevent generating many (unused) draft references, set_datastore_doi() checks metadata contents prior initiating draft reference DataStore. already DOI specified, ask really want -write DOI initiate new draft reference. Setting force = TRUE -ride aspect function, use care. set_datastore_doi() function requires metadata already contain data package title missing prompt insert quit. Setting force = TRUE override check. R successfully initiate draft reference DataStore, function remind log VPN. problem persists, email NRSS_DataStore@nps.gov . function generates draft reference DataStore. run force = FALSE (default), function report draft reference URL draft title draft reference. Make sure upload data metadata correct draft reference! draft reference title read: \"DRAFT: \". updated data package title upload metadata. set new DOI set_datastore_doi(), also update links within metadata data files reflect new draft reference DataStore location. links data files, set_datastore_doi() add - actually update doi. like test function without making excess references DataStore, set parameter dev=TRUE. re-route API requests development server. must logged VPN access irmadev.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_datastore_doi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initiates a draft reference and inserts the reserved DOI into metadata — set_datastore_doi","text":"","code":"if (FALSE) { # \\dontrun{ eml_object <- set_datastore_doi(eml_object) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"Check & set a DOI — set_doi","title":"Check & set a DOI — set_doi","text":"set_doi() checks see DOI alternateIdentifier tag. EMLassemblyline package stores data package DOIs tag (although official EML schema DOI different location). DOI alternateIdentifier tag, function adds DOI & reports new DOI. DOI, function reports existing DOI, prompts user input either retain existing DOI overwrite . Reports back existing new DOI, depending user input. alternative, consider using set_datastore_doi(), automatically initiate draft reference DataStore inject corresponding DOI metadata.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check & set a DOI — set_doi","text":"","code":"set_doi(eml_object, ds_ref, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check & set a DOI — set_doi","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). ds_ref 7-digit reference code generated DataStore draft reference initiated.include full URL, DOI prefix, anything except 7-digit DataStore Reference Code. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check & set a DOI — set_doi","text":"EML-formatted R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_doi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check & set a DOI — set_doi","text":"set_doi() used change DOI, also update urls listed metadata data file reflect new DOI/DataStore reference. links data files, set_doi() add - actually update doi.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_doi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check & set a DOI — set_doi","text":"","code":"if (FALSE) { # \\dontrun{ eml_object <- set_doi(eml_object, 1234567) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_drr.html","id":null,"dir":"Reference","previous_headings":"","what":"adds DRR connection — set_drr","title":"adds DRR connection — set_drr","text":"set_drr adds DOI associated DRR","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_drr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adds DRR connection — set_drr","text":"","code":"set_drr(   eml_object,   drr_ref_id,   drr_title,   org_name = \"NPS\",   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_drr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adds DRR connection — set_drr","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). drr_ref_id 7-digit string DataStore Reference ID DRR associated data package. drr_title title DRR appears DataStore Reference. org_name String. Defaults NPS. organization publishing DRR NPS, set org_name publishing organization's name. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_drr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"adds DRR connection — set_drr","text":"EML-formatted R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_drr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"adds DRR connection — set_drr","text":"adds uses DataStore Reference ID associate DRR  properly formatted DOI (prefaced \"DRR: \")  element. Creates populates required children elements usageCitation including DRR title, creator organization name, report number. Note organization name (org_name) defaults NPS.  want organization name DRR NPS, set org_name=\"Favorite Organization\" set NPS=FALSE. Also sets id flag usageCitation \"associatedDRR\".","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_drr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"adds DRR connection — set_drr","text":"","code":"if (FALSE) { # \\dontrun{ drr_title <- \"Data Release Report for Data Package 1234\" set_drr(eml_object, \"2293234\", drr_title) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_int_rights.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Intellectual Rights (and License) — set_int_rights","title":"Set Intellectual Rights (and License) — set_int_rights","text":"set_int_rights allows intellectualRights licenseName fields EML surgically replaced.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_int_rights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Intellectual Rights (and License) — set_int_rights","text":"","code":"set_int_rights(   eml_object,   license = c(\"CC0\", \"public\", \"restricted\"),   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_int_rights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Intellectual Rights (and License) — set_int_rights","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). license String. Indicates type license used. three potential options \"CC0\", \"public\" \"restricted\". CC0 public can used CUI set PUBLIC. Restricted can used CUI set code set PUBLIC (see set_cui_code() list codes). view exact text inserted license, please see https://nationalparkservice.github.io/NPS_EML_Script/stepbystep.html#intellectual-rights force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_int_rights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Intellectual Rights (and License) — set_int_rights","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_int_rights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Intellectual Rights (and License) — set_int_rights","text":"set_int_rights requires CUI information listed additionalMetadata prior called. verbose force = FALSE option warn user CUI specified. set_int_rights checks make sure CUI code specified (see set_cui_code()) appropriate license type chosen. public NPS datasets, CC0 license appropriate.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_int_rights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Intellectual Rights (and License) — set_int_rights","text":"","code":"if (FALSE) { # \\dontrun{ set_int_rights(eml_object, \"CC0\", force=TRUE, NPS=FALSE) set_int_rights(eml_object, \"restricted\")} # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_language.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the human language used for metadata — set_language","title":"Set the human language used for metadata — set_language","text":"set_language allows user specify language metadata (data) constructed . field intended hold human language, .e. English, Spanish, Cherokee.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the human language used for metadata — set_language","text":"","code":"set_language(eml_object, lang, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_language.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the human language used for metadata — set_language","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). lang string consisting language data metadata constructed , example, \"English\", \"Spanish\", \"Navajo\". Capitalization matter, spelling ! input provided converted 3-digit ISO 639-2 codes. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_language.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the human language used for metadata — set_language","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_language.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the human language used for metadata — set_language","text":"English words language data metadata constructed (e.g. \"English\") automatically converted 3-letter codes languages listed ISO 639-2 (available https://www.loc.gov/standards/iso639-2/php/code_list.php) inserted metadata.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_language.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the human language used for metadata — set_language","text":"","code":"if (FALSE) { # \\dontrun{ set_language(eml_object, \"english\") set_language(eml_object, \"Spanish\") set_language(eml_object, \"nAvAjO\") } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_lit.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit literature cited — set_lit","title":"Edit literature cited — set_lit","text":"set_lit takes bibtex file (*.bib) input adds bibtex list EML citations","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_lit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit literature cited — set_lit","text":"","code":"set_lit(eml_object, bibtex_file, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_lit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit literature cited — set_lit","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). bibtex_file text file one bib-formatted references extension .bib. Make sure .bib file working directory, supply path file. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_lit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit literature cited — set_lit","text":"EML object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_lit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Edit literature cited — set_lit","text":"looks literature cited  tag finds none, inserts citations entry *.bib file. literature cited exists asks either nothing, replace existing literature cited supplied .bib file, append additional references supplied .bib file. force=TRUE, existing literature cited replaced contents .bib file.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_lit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit literature cited — set_lit","text":"","code":"if (FALSE) { # \\dontrun{ eml_object <- litcited2 <- set_lit(eml_object, \"bibfile.bib\") } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the Methods in metadata — set_methods","title":"Sets the Methods in metadata — set_methods","text":"set_methods() check add/replace methods metadata","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the Methods in metadata — set_methods","text":"","code":"set_methods(eml_object, method, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the Methods in metadata — set_methods","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). method String. string text describing study methods. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the Methods in metadata — set_methods","text":"EML-formatted object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sets the Methods in metadata — set_methods","text":"Users may want edit methods errors non-ASCII text characters discovered methods prominently displayed DataStore. avoid non-standard characters, users highly encouraged generate methods using text editor Notepad rather word processor MS Word. time, set_methods() support complex formatting , bullets, tabs, multiple spaces. text included description element (child element single methodStep element within methods element). Additional child elments methods methodStep subStep, software, instrumentation, citation, sampling, etc supported time. information may added text. can add line breaks \"\\n\" new paragraph (blank line text) \"\\n\\n\".","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the Methods in metadata — set_methods","text":"","code":"if (FALSE) { # \\dontrun{ eml_object <- set_methods(eml_object, \"Here are some methods we performed.\") } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_missing_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a missing value code and definition to EML metadata — set_missing_data","title":"Adds a missing value code and definition to EML metadata — set_missing_data","text":"Missing data must missing data code missing data code definition. set_missing_data() can add single missing value code single missing value code definition. Missing data clearly indicated data missing data code (e.g \"NA\", \"NaN\", \"Missing\", \"blank\" etc.). generally good idea use special characters missing data codes (e.g. N/advised). absolutely necessary leave cell empty code, cell still needs missing value code definition metadata. Acceptable codes case \"empty\" \"blank\" suitable definition states cells purposefully left empty.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_missing_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a missing value code and definition to EML metadata — set_missing_data","text":"","code":"set_missing_data(   eml_object,   files,   columns,   codes,   definitions,   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_missing_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a missing value code and definition to EML metadata — set_missing_data","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). files String List strings. files contain undocumented missing data, e.g \"my_data_file1.csv\". columns String List strings. columns missing data like add missing data codes explanations metadata, e.g. \"scientificName\". codes String list strings. missing value codes like associated column question, e.g. \"missing\" \"NA\". definitions String list strings. missing value code definitions associated missing value codes, e.g \"recorded\" \"sample damaged lab flooded\". force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_missing_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a missing value code and definition to EML metadata — set_missing_data","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_missing_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds a missing value code and definition to EML metadata — set_missing_data","text":"set_missing_data() used individual column can accept lists files, column names, codes, definitions. Make sure missing value file, column, single code, single definition associated (need multiple missing value codes definitions per column, please use set_more_missing() function). many missing value codes definitions, might consider constructing (import) dataframe describe : Example data frame: df <- data.frame(files       = c(\"table1.csv\", \"table2.csv\", \"table3.csv\", \"table4.csv\"), columns     = c(\"EventDate\", \"scientificName\", \"eventID\", \"decimalLatitude\"), codes       = c(\"NA\", \"NA\", \"missing\", \"blank\"), definitions = c(\"recorded\", \"identified\", \"recorded\", \"intentionally left blank - recorded\")) meta2 <- set_missing_data(eml_object = metadata, files = df$files, columns = df$columns, codes = df$codes, definitions = df$definitions)","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_missing_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a missing value code and definition to EML metadata — set_missing_data","text":"","code":"if (FALSE) { # \\dontrun{ #For a single column of data in a single file: meta2 <- set_missing_data(my_metadata,                           \"table1.csv\",                           \"scientificName\",                           \"NA\",                           \"Unable to identify\")  #For multiple columns of data, potentially across multiple files: #(blank cells must have the missing value code of \"blank\" or \"empty\") meta2 <- set_missing_data(my_metadata,                          files = c(\"table1.csv\", \"table1.csv\", \"table2.csv\"),                          columns = c(\"date\", \"time\", \"scientificName\"),                          codes = c(\"NA\", \"missing\", \"blank\"),                          definitions = c(\"date not recorded\",                                        \"time not recorded\",                                        \"intentionally left blank - missing\")                                        ) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_new_creator.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds creators to EML — set_new_creator","title":"Adds creators to EML — set_new_creator","text":"Sometimes necessary change creators (authors) data package. data package EML already created, can tedious re-run EMLassemblyline functions re-EMLeditor functions. function allows user add one creators without re-run entire workflow. -write remove existing creators, just add list creators.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_new_creator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds creators to EML — set_new_creator","text":"","code":"set_new_creator(   eml_object,   last_name = NA,   first_name = NA,   middle_name = NA,   organization_name = NA,   email_address = NA,   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_new_creator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds creators to EML — set_new_creator","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). last_name String (list strings). last name(s) creator(s) add. must supply last name creator. first_name String (list strings). first name(s) initials creator(s) add. Use NA first name. middle_name String (list strings). middle name(s) initial(s) creator(s) add. Use NA middle name. organization_name String (list strings). organizational affiliation creator(s) add, e.g. \"National Park Service\". Use NA organizational affiliation. email_address String (list strings). email address(es) creator(s) add. Use NA email addresses. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_new_creator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds creators to EML — set_new_creator","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_new_creator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds creators to EML — set_new_creator","text":"creator must minimum last name. may also supply first name one middle name. adding list creators, must supply fields creator; one creator instance missing use first name, skip instead list NA. need re-arrange creators remove creators, can using set_creator_order function.use function add organizations creators. Instead use set_creator_orgs. new creator orcid, add orcid via set_creator_orgs","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_new_creator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds creators to EML — set_new_creator","text":"","code":"if (FALSE) { # \\dontrun{ meta2 <- set_new_creator(metadata, \"Doe\", \"John\", \"D.\", \"NPS\", \"John_Doe@nps.gov\") meta2 <- set_new_creator(metadata,                          last_name = c(\"Doe\", \"Smith\"),                          first_name = c(\"John\", \"Jane\"),                          middle_name = c(NA, \"S.\"),                          organization_name = c(\"NPS\", \"UCLA\"),                          email_address = c(\"john_doe@nps.gov\", NA)) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_producing_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets Producing Units for use in DataStore — set_producing_units","title":"Sets Producing Units for use in DataStore — set_producing_units","text":"set_producing_units inserts unit code producing unit data/metadata EML metdata file.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_producing_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets Producing Units for use in DataStore — set_producing_units","text":"","code":"set_producing_units(eml_object, prod_units, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_producing_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets Producing Units for use in DataStore — set_producing_units","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). prod_units string producing unit Unit Code list unit codes, example \"ROMO\" c(\"ROMN\", \"SODN\") force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_producing_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets Producing Units for use in DataStore — set_producing_units","text":"EML object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_producing_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sets Producing Units for use in DataStore — set_producing_units","text":"inserts unit code metadataProvider element. Currently add existing metadataProvider fields; just -write . also currently handles single producing unit. See @param NPS details sub-functions. Additionally, information version EML editor used injected metadata.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_producing_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets Producing Units for use in DataStore — set_producing_units","text":"","code":"if (FALSE) { # \\dontrun{ prod_units <- c(\"ABCD\", \"EFGH\") set_producing_units(eml_object, prod_units) set_producing_units(eml_object, c(\"ABCD\", \"EFGH\")) set_producing_units(eml_object, \"ABCD\", force = TRUE) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a reference to a DataStore Project housing the data package — set_project","title":"Adds a reference to a DataStore Project housing the data package — set_project","text":"function add single project title URL metadata corresponding DataStore Project reference data package linked . Upon EML extraction DataStore, data package automatically added/linked DataStore project indicated.EML2.2.0 supports single project set_project()overwrite/replace existing project element.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a reference to a DataStore Project housing the data package — set_project","text":"","code":"set_project(   eml_object,   project_reference_id,   dev = FALSE,   force = FALSE,   NPS = TRUE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a reference to a DataStore Project housing the data package — set_project","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). project_reference_id String. 7-digit number corresponding Project reference ID data package linked . dev Logical. Defaults FALSE, meaning function validate user input based DataStore production server. can set dev = TRUE test function development server. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a reference to a DataStore Project housing the data package — set_project","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_project.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds a reference to a DataStore Project housing the data package — set_project","text":"function overwrite existing projects. add DataStore project metadata, project must publicly available. person uploading extracting EML must owner data package project references order correct permissions DataStore create desired link. set NPS = TRUE force = FALSE (default settings), function also test whether owner-level permissions project necessary DataStore automatically connect data package project. DataStore add links data packages projects. DataStore remove data packages projects. need remove link data package project (perhaps supplied incorrect project reference ID first), need manually remove connection using DataStore web interface.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a reference to a DataStore Project housing the data package — set_project","text":"","code":"if (FALSE) { # \\dontrun{ eml_object <- set_project(eml_object,                          1234567) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_protocol.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a connection to the protocol under which the data were collected — set_protocol","title":"Adds a connection to the protocol under which the data were collected — set_protocol","text":"function currently development. use , break EML.  warned. set_protocol adds metadata link protocol data described collected. automatically inserts link DataStore landing page protocol well protocol title creator.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_protocol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a connection to the protocol under which the data were collected — set_protocol","text":"","code":"set_protocol(eml_object, protocol_id, dev = FALSE, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_protocol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a connection to the protocol under which the data were collected — set_protocol","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). protocol_id string. 7-digit number identifying DataStore reference number Project describes inventory monitoring project. dev Logical. Defaults FALSE, meaning API calls production version DataStore. test function, set dev = TRUE use development environment DataStore. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_protocol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a connection to the protocol under which the data were collected — set_protocol","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_protocol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds a connection to the protocol under which the data were collected — set_protocol","text":"protocols can published DataStore using number different reference types, set_protocol check make sure actually supplying reference ID protocol (correct protocol).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_protocol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a connection to the protocol under which the data were collected — set_protocol","text":"","code":"if (FALSE) { # \\dontrun{ set_protocol(eml_object, 2222140) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_publisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Publisher — set_publisher","title":"Set Publisher — set_publisher","text":"set_publisher used publisher National Park Service contact address publisher central office Fort Collins. data packages published Fort Collins office, regardless collected uploaded . working metadata data package, use function unless sure need (NPS users want use function). want publisher anything NPS Fort Collins Office, want originating agency something NPS, product NPS, use function. probably good idea run args(set_publisher) make sure arguments, especially defaults, properly specified.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_publisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Publisher — set_publisher","text":"","code":"set_publisher(   eml_object,   org_name = \"NPS\",   street_address,   city,   state,   zip_code,   country,   URL,   email,   ror_id,   for_or_by_NPS = TRUE,   force = FALSE,   NPS = FALSE )"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_publisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Publisher — set_publisher","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). org_name String. organization name publishing digital product. Defaults \"NPS\". street_address String. street address digital product published city String. city digital product published state String. two-letter code state digital product published. zip_code String. postal code publishers location. country String. country digital product published. URL String. URL publisher. email String. email publisher. ror_id String. ROR id publisher (see https://ror.org/ information). for_or_by_NPS Logical. Defaults TRUE. digital product NPS, set FALSE. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. Set FALSE party responsible data collection generation NPS publisher NPS central office Fort Collins.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_publisher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Publisher — set_publisher","text":"eml_object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_publisher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Publisher — set_publisher","text":"","code":"if (FALSE) { # \\dontrun{ set_publisher(eml_object,   \"BroadLeaf\",   \"123 First Street\",   \"Second City\",   \"CO\",   \"12345\",   \"USA\",   \"https://www.organizationswebsite.com\",   \"contact@myorganization.com\",   \"https://ror.org/xxxxxxxxx\",   for_or_by_NPS = FALSE,   NPS = FALSE ) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit data package title — set_title","title":"Edit data package title — set_title","text":"Edit data package title","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit data package title — set_title","text":"","code":"set_title(eml_object, data_package_title, force = FALSE, NPS = TRUE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit data package title — set_title","text":"eml_object EML-formatted R object, either generated R imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). data_package_title character string become new title data package. can specified directly function call can previously defined object holds character string. force logical. Defaults false. set FALSE, interactive version function requesting user input feedback. Setting force = TRUE facilitates scripting. NPS Logical. Defaults TRUE. NPS users leave default. specific circumstances set FALSE: publishing NPS, need set publisher location place Fort Collins Office (e.g. working data package) product \"\" NPS \"\" NPS need specify different agency, set NPS = FALSE. NPS=TRUE, function -write existing publisher info inject NPS publisher along Central Office Fort Collins location. Additionally, sets \"NPS\" field TRUE specifies originating agency NPS.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit data package title — set_title","text":"EML-formatted R object","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_title.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Edit data package title — set_title","text":"set_title() function checks see existing title asks user like change title. work still needed function get_eml() automatically returns instances given tag. Specifying title important function work well.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/set_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit data package title — set_title","text":"","code":"if (FALSE) { # \\dontrun{ data_package_title <- \"New Title. Must match DataStore Reference title.\" eml_object <- set_title(eml_object, data_package_title) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/upload_data_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a data package to DataStore — upload_data_package","title":"Upload a data package to DataStore — upload_data_package","text":"upload_data_package() inspects data package , DOI supplied metadata, uploads data files metadata appropriate reference DataStore. function requires logged VPN. upload_data_package() work individual file data package less 32Mb. Larger files still require manual upload via DataStore web interface. upload_data_package() just uploads files. extract EML metadata populate reference fields DataStore activate reference - reference remains fully editable via web interface. using upload_data_package() need \"save\" reference DataStore; files automatically saved reference.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/upload_data_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a data package to DataStore — upload_data_package","text":"","code":"upload_data_package(directory = here::here(), force = FALSE, dev = FALSE)"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/upload_data_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a data package to DataStore — upload_data_package","text":"directory location (path) data package files force logical, defaults FALSE verbose interactive version. Set TRUE suppress interactions facilitate scripting. dev Logical. Defaults FALSE. dev = TRUE, api actions re-routed development server (opposed dev = FALSE api actions target production server).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/upload_data_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a data package to DataStore — upload_data_package","text":"invisible(NULL)","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/upload_data_package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload a data package to DataStore — upload_data_package","text":"Currently, .csv data files EML metadata files supported. .csvs must end \".csv\". single metadata file must end \"_metadata.xml\". included DOI metadata, using upload_data_package() preferable using web interface manually upload files insures files uploaded correct reference (.e. DOI metadata corresponds draft reference code DataStore). uploaded, advised look 'Files Links' tab DataStore web interface make sure files duplicates. can delete files necessary 'Files Links' tab reference activated. function primarily intended uploading files data package reference type DataStore, upload .csvs single EML metadata file saved *_metadata.xml file reference type, assuming metadata DOI listed expected location corresponding draft reference DataStore. Due known bug DataStore API, can use function upload files . need replace files, must DataStore GUI. #' like test function without making uploading DataStore, set parameter dev=TRUE. re-route API requests development server. must logged VPN access irmadev must draft reference dev server (using set_datastore_doi() dev=TRUE).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/upload_data_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a data package to DataStore — upload_data_package","text":"","code":"if (FALSE) { # \\dontrun{ dir <- here::here(\"..\", \"Downloads\", \"BICY\") upload_data_package(dir) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_attribute_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes attribute tables from an EML object as text files — write_attribute_tables","title":"Writes attribute tables from an EML object as text files — write_attribute_tables","text":"write_attribute_tables wrapper around get_attribute_tables(). takes EML object writes one attribute table data table EML file. writes attribute tables .txt files working directory specified path. function useful recreating metadata EMLassemblyline, user access original text files.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_attribute_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes attribute tables from an EML object as text files — write_attribute_tables","text":"","code":"write_attribute_tables(eml_object, path = here::here())"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_attribute_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes attribute tables from an EML object as text files — write_attribute_tables","text":"eml_object R object imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). path default working directory. path determines txt files written.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_attribute_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Writes attribute tables from an EML object as text files — write_attribute_tables","text":"","code":"if (FALSE) { # \\dontrun{ write_attribute_tables(example_EML) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_catvar_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes categorical variable tables from an EML object as text files — write_catvar_tables","title":"Writes categorical variable tables from an EML object as text files — write_catvar_tables","text":"write_catvar_tables wrapper around get_catvar_tables(). takes EML object writes one categorical variable table data table EML file. writes attribute tables .txt files working directory specified path. function useful recreating metadata EMLassemblyline, user access original text files.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_catvar_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes categorical variable tables from an EML object as text files — write_catvar_tables","text":"","code":"write_catvar_tables(eml_object, path = here::here())"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_catvar_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes categorical variable tables from an EML object as text files — write_catvar_tables","text":"eml_object R object imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). path default working directory. path determines txt files written.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_catvar_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Writes categorical variable tables from an EML object as text files — write_catvar_tables","text":"","code":"if (FALSE) { # \\dontrun{ write_catvar_tables(example_EML) } # }"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes a README file — write_readme","title":"Writes a README file — write_readme","text":"write_readme writes readme file based current metadata","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes a README file — write_readme","text":"","code":"write_readme(eml_object, outfile = \"\")"},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes a README file — write_readme","text":"eml_object R object imported (typically EML-formatted .xml file) using EML::read_eml(, =\"xml\"). outfile name file want write, typically *.txt.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_readme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes a README file — write_readme","text":"character string readable format (saved given outfile)","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_readme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Writes a README file — write_readme","text":"write_readme writes mock-readme file eventually automatically generated DataStore. file error checking purposes . something looks , can go back fix metadata correct upload readme file data package.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/reference/write_readme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Writes a README file — write_readme","text":"","code":"if (FALSE) { # \\dontrun{ write_readme(eml_object, \"TestReadMe.txt\") } # }"},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2025-1-1-0","dir":"Changelog","previous_headings":"","what":"2025-04-14","title":"EMLeditor v1.1.0","text":"remove calls arcticdatautils package; remove arcticdatautils suggests remotes.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2025-1-1-0-1","dir":"Changelog","previous_headings":"","what":"2025-04-11","title":"EMLeditor v1.1.0","text":"add get_eml_simple function associated unit test.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2025-1-1-0-2","dir":"Changelog","previous_headings":"","what":"2025-04-09","title":"EMLeditor v1.1.0","text":"update set_data_urls set dataset urls addition dataTable urls. set_data_urls now adds function = “information” tag urls lead direct file download links. overwrite function = “download” tags added ezEML. update set_data_urls unit tests; add test function = “information”. update set_data_urls allow custom tags custom urls also supplied. Added unit tests cover new code.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2025-1-1-0-3","dir":"Changelog","previous_headings":"","what":"2025-03-25","title":"EMLeditor v1.1.0","text":"fix bug prevented upload_data_package uploading .csv files.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2025-1-1-0-4","dir":"Changelog","previous_headings":"","what":"2025-03-12","title":"EMLeditor v1.1.0","text":"fix typos skeleton.rmd a02_EML_creation_script.Rmd remove redundant check_eml function update associated documentation remove DPchecker dependency DESCRIPTION Update MIT license JOSS, NPS, R compatible!","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2025-1-1-0-5","dir":"Changelog","previous_headings":"","what":"2025-03-10","title":"EMLeditor v1.1.0","text":"refactor upload_data_package depend DPchecker::load_metadata ## 2025-03-10 Updated license OSI-approved “Zero-Clause BSD” support JOSS submission.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2025-1-1-0-6","dir":"Changelog","previous_headings":"","what":"2025-02-25","title":"EMLeditor v1.1.0","text":"Update CONTRIBUTING.md file ## 2025-02-22 Add CONTRIBUTING.md file","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2025-1-1-0-7","dir":"Changelog","previous_headings":"","what":"2025-02-06","title":"EMLeditor v1.1.0","text":"Bug fix set_int_rights affecting CC0 licenses.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2025-1-0-0","dir":"Changelog","previous_headings":"","what":"2025-01-16","title":"EMLeditor v1.0.0","text":"Fix bug set_project update associated documentation.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-1-0-0","dir":"Changelog","previous_headings":"","what":"2024-11-04","title":"EMLeditor v1.0.0","text":"Fix documentation EMLscript code chunk can make difficult/confusing enter user input running upload_data_package function.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-1-0-0-1","dir":"Changelog","previous_headings":"","what":"2024-10-23","title":"EMLeditor v1.0.0","text":"updates fixes documentation including spelling, grammar, clarity remove non-exported functions documentation move several packages Imports Suggests (ISOcodes, sf, gdata)","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6","dir":"Changelog","previous_headings":"","what":"2024-09-17","title":"EMLeditor v0.1.6","text":"Update set_content_units correct east west GPS coordinates bounding boxes.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-1","dir":"Changelog","previous_headings":"","what":"2024-08-29","title":"EMLeditor v0.1.6","text":"Update readme: add R-CMD-CHECK badge; use pak install instead devtools Update licenseName field restricted references read, “Unlicensed (public dissemination)” add github actions: build check add set_project EMLscript template (.Rmd) github.io documentation pages. update set_project adds projects instead replacing . update set_project use cli errors/warnings add minimal unit test set_project","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-2","dir":"Changelog","previous_headings":"","what":"2024-08-21","title":"EMLeditor v0.1.6","text":"add id tag projects help DataStore identify DataStore projects vs. projects.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-3","dir":"Changelog","previous_headings":"","what":"2024-08-20","title":"EMLeditor v0.1.6","text":"add helper.R file test_path function facilitate unit tests update unit test code run interactively build checks add yaml file conduct github actions: build test","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-4","dir":"Changelog","previous_headings":"","what":"2024-07-10","title":"EMLeditor v0.1.6","text":"add new function set_project() attempt update existing function, set_protocol(). update license MIT CC0.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-5","dir":"Changelog","previous_headings":"","what":"2024-07-02","title":"EMLeditor v0.1.6","text":"updated API requests user v6 API instead v7.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-6","dir":"Changelog","previous_headings":"","what":"2024-07-01","title":"EMLeditor v0.1.6","text":"Updated .get_park_polygon() use latest version API rather legacy version.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-7","dir":"Changelog","previous_headings":"","what":"2024-06-26","title":"EMLeditor v0.1.6","text":"Added new function, set_new_creator() can add one creators EML.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-8","dir":"Changelog","previous_headings":"","what":"2024-05-01","title":"EMLeditor v0.1.6","text":"Fix documentation: typo/formatting description set_int_rights() EML Creation Script github.io page.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-9","dir":"Changelog","previous_headings":"","what":"2024-04-29","title":"EMLeditor v0.1.6","text":"Bug fix set_cui() deprecation message: now points correct updated function (set_cui_code()).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-6-10","dir":"Changelog","previous_headings":"","what":"2024-04-08","title":"EMLeditor v0.1.6","text":"Bug fix set_doi(), always updating dataTable URLs.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-5","dir":"Changelog","previous_headings":"","what":"2024-04-01","title":"EMLeditor v0.1.5 “Little Bighorn”","text":"Fix bug set_creator_orcids(): longer adds https://orcid.org/NA creators without orcid. Added checks set_creator_orcids() users must specify NA (“NA”) check length orcid list supplied matches length authors metadata (excluding organizational authors). Updated set_creator_orcids() documentation specify function can also used remove orcids authors. Updated EML creation script reference set_cui_code() opposed (now deprecated) set_cui().","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-5-1","dir":"Changelog","previous_headings":"","what":"2024-04-01","title":"EMLeditor v0.1.5 “Little Bighorn”","text":"Fix bug set_cui_code() detecting CUI code CUI marking. Fix bug set_cui_marking(). Fix bug set_creator_order().","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-5-2","dir":"Changelog","previous_headings":"","what":"2024-03-12","title":"EMLeditor v0.1.5 “Little Bighorn”","text":"make write_readme() non-exported function.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-5-3","dir":"Changelog","previous_headings":"","what":"2024-02-29","title":"EMLeditor v0.1.5 “Little Bighorn”","text":"Add function get_cui_code(). Deprecate function get_cui(). Add function get_cui_marking().","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-5-4","dir":"Changelog","previous_headings":"","what":"2024-02-22","title":"EMLeditor v0.1.5 “Little Bighorn”","text":"Added function set_missing_data() allows users add missing data codes missing data code definitions metadata. Added utility functions .get_user_input() .get_user_input3(). Refactored set_ class functions use sub-functions rather readLines() get user input.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-5-5","dir":"Changelog","previous_headings":"","what":"2024-02-13","title":"EMLeditor v0.1.5 “Little Bighorn”","text":"Deprecated set_cui() favor set_cui_dissem(), exact thing set_cui() function name updated distinguish action function newly added set_cui_code() function. Updated publisher contact email set_npspublisher() irma@nps.gov nrss_datastore@nps.gov reflect DataStore changes contact email address.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2024-0-1-4","dir":"Changelog","previous_headings":"","what":"2024-01-18","title":"EMLeditor v0.1.4 “Mackinac Island”","text":"Added function remove_datastore_files(), can detach files DataStore Reference. conjunction upload_data_package() allows user update make changes files data package (instance, response review data package) prior activating data package.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_2023-0-1-3","dir":"Changelog","previous_headings":"","what":"2023-11-07","title":"EMLeditor v0.1.3 “Single Pen”","text":"Updated EML template script fix typos, remove write_readme section, add explanation personnel.txt file. Updated set_datastore_doi() use correct doi prefix dev = TRUE display correct URL upon draft reference creation. Ported documentation EML Creation Script NPS_EML_Script repo held repo. Updated documentation making EML; updated Readme reflect fact EML creation documentation/instructions now included EMLeditor package Removed “Get Started” (EMLeditor.rmd) file pretty redundant readme.md file. Updated template script R studio include package provenance function calls.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_06-october-0-1-2","dir":"Changelog","previous_headings":"","what":"06 October 2023","title":"EMLeditor v0.1.2 “Mukooda Trail”","text":"Updated set_datastore_doi() upload_data_package() functions allow work IRMA dev testing training purposes. Updated upload_data_package() prevent file upload reference already files associated .","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_29-august-0-1-1","dir":"Changelog","previous_headings":"","what":"29 August 2023","title":"EMLeditor v0.1.1 “Big South Fork”","text":"Updated rest API services v4/v5 v6. Units services remain v2.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_15-august-0-1-1","dir":"Changelog","previous_headings":"","what":"15 August 2023","title":"EMLeditor v0.1.1 “Big South Fork”","text":"Fix bugs get_authors() Fix bugs get_abstract()","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_19-july-0-1-1","dir":"Changelog","previous_headings":"","what":"19 July 2023","title":"EMLeditor v0.1.1 “Big South Fork”","text":"Fix examples set_creator_orgs() Add function set_methods() allows user add replace existing methods sections. Add function get_methods() returns methods section (list) Add function set_additiona_info() allows user set replace existing addtitionalInfo. AdditionalInfo becomes “Notes” DataStore landing page. Add function get_additional_info() returns additionalInfo (“notes”) metadata.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_12-july-0-1-1","dir":"Changelog","previous_headings":"","what":"12 July 2023","title":"EMLeditor v0.1.1 “Big South Fork”","text":"Add global variable bindings Fix set_creator_orcids handles orcids; now takes 19-char string input saves orcid 37-char string “https://orcid.org/” prefix.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_10-july-0-1-1","dir":"Changelog","previous_headings":"","what":"10 July 2023","title":"EMLeditor v0.1.1 “Big South Fork”","text":"Fixed minor typos EML creation script.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_30-june-0-1-1","dir":"Changelog","previous_headings":"","what":"30 June 2023","title":"EMLeditor v0.1.1 “Big South Fork”","text":"Added “park_units” parameter set_creator_orgs(). takes park unit (list park units) uses IRMA units service populate organizationName FullName park_unit specified. specify park_units, also specify “creator_orgs” - non-park unit organizations must added creators using separate call set_creator_orgs() (creators can subsequently reorganized using set_creator_order()).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_22-june-0-1-1","dir":"Changelog","previous_headings":"","what":"22 June 2023","title":"EMLeditor v0.1.1 “Big South Fork”","text":"Bug fix set_int_rights() - previously worked used set_cui(), exported .xml re-imported R. Now can go straight set_cuio() set_int_rights(). Updated documentation: information additional functions available use upload_datapackage() function updated EML script template: EMLassemblyline::make_eml now write .xml default instead defaults generating R object can subsequently processed via EMLeditor functions.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_16-june-0-1-0-7","dir":"Changelog","previous_headings":"","what":"16 June 2023","title":"EMLeditor v0.1.0.7 “Clingmans Dome”","text":"added function set_creator_order(), allows users re-order creators (authors DataStore) well remove creators.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_14-june-0-1-0-7","dir":"Changelog","previous_headings":"","what":"14 June 2023","title":"EMLeditor v0.1.0.7 “Clingmans Dome”","text":"updates EML creation script; make_eml() function stopped saving EML object R just writing .xml working directory. Add arguments return.obj = TRUE write.file = FALSE get opposite: save EML object R processing write .xml (create confusion later ) added function set_creator_orgs() allows users add organizations creators (authors DataStore). EMLassemblyline appear support functionality.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_13-june-0-1-0-7","dir":"Changelog","previous_headings":"","what":"13 June 2023","title":"EMLeditor v0.1.0.7 “Clingmans Dome”","text":"added function set_creator_orcids() allows users add edit ORCiDs individuals (organizations) listed creators","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_12-june-0-1-0-7","dir":"Changelog","previous_headings":"","what":"12 June 2023","title":"EMLeditor v0.1.0.7 “Clingmans Dome”","text":"updated error messages get_author_list() get_citation() informative, especially surName missing creator/individualName","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_21-april-0-1-0-7","dir":"Changelog","previous_headings":"","what":"21 April 2023","title":"EMLeditor v0.1.0.7 “Clingmans Dome”","text":"updated set_datastore_doi() prompt use set_datastore_doi() previous doi. Fixed readline prompt cursor wrong line. Now generates draft references blank fields instead place-holder strings (except title).","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_19-april-0-1-0-6","dir":"Changelog","previous_headings":"","what":"19 April 2023","title":"EMLeditor v0.1.0.6 “Double Arch”","text":"updated set_content_units() include attribute “system = content unit link” part geographicCoverage element geographicCoverage element also park content unit link (old text field, “NPS Content Unit Link:” retained).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_18-april-0-1-0-6","dir":"Changelog","previous_headings":"","what":"18 April 2023","title":"EMLeditor v0.1.0.6 “Double Arch”","text":"updated set_data_urls(), set_doi(), set_datastore_doi() handle cases one dataTable (well multiple data tables). updated set_cui() handle cases previus additionalMetadata element metadata. updated set_cui() set_int_rights() can accept parameters case, just upper (set_cui()) lower (set_int_rights()).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_13-april-0-1-0-6","dir":"Changelog","previous_headings":"","what":"13 April 2023","title":"EMLeditor v0.1.0.6 “Double Arch”","text":"added set_data_urls() function update dataTable urls metadata correspond DOI metadata. updated get_doi() add line return error message.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_12-april-0-1-0-5","dir":"Changelog","previous_headings":"","what":"12 April 2023","title":"EMLeditor v0.1.0.5 “Congaree Boardwalk Loop”","text":"set_doi() set_datastore_doi() now automatically update online urls listed metadata data file correspond new location. Caution: metadata DOI generated prior 12 April 2023 may incorrect online URLs. Attempt add .Rmd template Rstudio","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_04-april-0-1-0-5","dir":"Changelog","previous_headings":"","what":"04 April 2023","title":"EMLeditor v0.1.0.5 “Congaree Boardwalk Loop”","text":"upload_data_package() maximum file size increased 32Mb (4Mb)","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_24-march-0-1-0-5","dir":"Changelog","previous_headings":"","what":"24 March 2023","title":"EMLeditor v0.1.0.5 “Congaree Boardwalk Loop”","text":"Added tryCatch .get_park_poygon() improve error handling invalid park codes. Improved set_content_units() error handling specifically test invalid park codes prior executing & report list invalid park codes user. Fixed (yet another) bug get_content_units().","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"id_21-march-0-1-0-4","dir":"Changelog","previous_headings":"","what":"21 March 2023","title":"EMLeditor v0.1.0.4 “Acadia”","text":"Summary Added new function upload_data_package() upload data package files appropriate draft reference DataStore. Individual files must < 4Mb.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"major-changes-0-1-0-4","dir":"Changelog","previous_headings":"21 March 2023","what":"Major changes:","title":"EMLeditor v0.1.0.4 “Acadia”","text":"Added upload_data_package() upload data package files appropriate draft reference DataStore. function compatible .csv data files requires single EML metadata file ending *_metadata.xml present single folder/directory. metadata file must DOI specified. upload_data_package() extract DOI metadata check see corresponding reference exists DataStore. reference exists, function upload file data package (including metadata file).","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"minor-changes-0-1-0-4","dir":"Changelog","previous_headings":"21 March 2023","what":"Minor changes","title":"EMLeditor v0.1.0.4 “Acadia”","text":"Minor update get_doi() points; DOI doesn’t exist function now refers users set_doi() set_datastore_doi(). Minor updates documentation consistency grammar.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"february-0-1-0-3","dir":"Changelog","previous_headings":"","what":"February 24, 2023","title":"EMLeditor v0.1.0.3 “Hall of Mosses”","text":"Summary Added new function, set_datastore_doi() initiate draft reference DataStore insert DOI metadata","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"major-changes-0-1-0-3","dir":"Changelog","previous_headings":"February 24, 2023","what":"Major changes:","title":"EMLeditor v0.1.0.3 “Hall of Mosses”","text":"Added new function, set_datasore_doi() initiate draft reference DataStore insert DOI metadata. requires user logged VPN metadata title data package. function warn user metadata already contains DOI ask really want generate new draft reference new DOI.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"minor-changes-0-1-0-3","dir":"Changelog","previous_headings":"February 24, 2023","what":"Minor changes","title":"EMLeditor v0.1.0.3 “Hall of Mosses”","text":"Updated documentation reflect new set_datastore_doi() function. Updated get_title() get_doi() functions get just data package title just data package DOI, respectively. returning multiple titles dois   fields used multiple times metadata.","code":""},{"path":[]},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"summary-0-1-0-2","dir":"Changelog","previous_headings":"February 09, 2023","what":"Summary","title":"EMLeditor v0.1.0.2 “Devils Tower”","text":"Bug fixes, update set_cui() codes, flesh set_int_rights. Update documentation.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"major-changes-0-1-0-2","dir":"Changelog","previous_headings":"February 09, 2023","what":"Major changes","title":"EMLeditor v0.1.0.2 “Devils Tower”","text":"replaced PUBVER PUBFUL codes PUBLIC set_cui(). removed NPSONLY code set_cui(). major bug fixes set_content_units(). updated set_int_rights() also populate licenseName field.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"minor-changes-0-1-0-2","dir":"Changelog","previous_headings":"February 09, 2023","what":"Minor changes","title":"EMLeditor v0.1.0.2 “Devils Tower”","text":"fixed minor typos documentation moved set_int_rights() “additional functions” “minimal workflow”","code":""},{"path":[]},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"summary-0-1-0-1","dir":"Changelog","previous_headings":"January 24, 2023","what":"Summary","title":"EMLeditor v0.1.0.1 “Whitebark Pine”","text":"Added check_eml() function.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"major-changes-0-1-0-1","dir":"Changelog","previous_headings":"January 24, 2023","what":"Major changes","title":"EMLeditor v0.1.0.1 “Whitebark Pine”","text":"check_eml() function wrapper calls DPchecker::run_congruence_checks() check_metadata-= TRUE. run metadata-specific tests run congruence test.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"minor-changes-0-1-0-1","dir":"Changelog","previous_headings":"January 24, 2023","what":"Minor changes","title":"EMLeditor v0.1.0.1 “Whitebark Pine”","text":"specify ISO 639-2B set_language() added documentation check_eml() Changed Non-NPS user section apt, “Custom Publisher/Producer” added “Additional Functions” section addition Minimal Workflow outlines functions like set_title(), set_abstract() set_int_rights(). moved write_readme() new check_eml() file check_eml.R.","code":""},{"path":[]},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"summary-0-1-0-0","dir":"Changelog","previous_headings":"December 1, 2022","what":"Summary","title":"EMLeditor v0.1.0.0, “Electric Peak”","text":"Added set_int_rights() function.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"major-changes-0-1-0-0","dir":"Changelog","previous_headings":"December 1, 2022","what":"Major Changes","title":"EMLeditor v0.1.0.0, “Electric Peak”","text":"set_int_rights() allows users update intellectual rights text supplied 3rd party EML generators one 3 NPS-specific options. Enforces congruence CUI license.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"summary-0-1-0-0-1","dir":"Changelog","previous_headings":"November, 2022","what":"Summary","title":"EMLeditor v0.1.0.0, “Electric Peak”","text":"Updating v0.1.0.0 “Electric Peak” recommended users order take full advantage metadata/DataStore integration included --date locations specifications DataStore metadata elements.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"major-changes-0-1-0-0-1","dir":"Changelog","previous_headings":"November, 2022","what":"Major Changes","title":"EMLeditor v0.1.0.0, “Electric Peak”","text":"ability switch “set_” class functions verbose (asks user input, provides feedback) silent (feedback, prompts) enable scripting. Inclusion set_publisher function customize publisher agencyOriginated options non-NPS users, NPS partners contractors.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"enhancements-0-1-0-0","dir":"Changelog","previous_headings":"November, 2022","what":"Enhancements","title":"EMLeditor v0.1.0.0, “Electric Peak”","text":"CUI can now overwritten well written write_readme dynamically populates publisher information Renamed functions parameters conform tidyverse style guides Removed redundant functions (set_doi) Added ability set DRR title DOI write_readme now defaults printing screen (can still save .txt file) Update documentation reflect changes","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"bug-fixes-0-1-0-0","dir":"Changelog","previous_headings":"November, 2022","what":"Bug Fixes","title":"EMLeditor v0.1.0.0, “Electric Peak”","text":"Let’s just leave “lot”.","code":""},{"path":"https://nationalparkservice.github.io/EMLeditor/news/index.html","id":"emleditor-0011","dir":"Changelog","previous_headings":"","what":"EMLeditor 0.0.1.1","title":"EMLeditor 0.0.1.1","text":"Added NEWS.md file track changes package.","code":""}]
